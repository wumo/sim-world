/**
 * DO NOT EDIT THIS FILE - it is machine generated
 */
package wumo.sim.tensorflow.ops.gen

import wumo.sim.algorithm.tensorflow.TF
import wumo.sim.algorithm.tensorflow.ops.Output
import wumo.sim.algorithm.tensorflow.buildOpTensors

fun TF.allCandidateSampler(true_classes: Output, num_true: Long, num_sampled: Long, unique: Boolean, seed: Long = 0L, seed2: Long = 0L, name: String = "AllCandidateSampler") = run {
  buildOpTensors("AllCandidateSampler", name) {
    addInput(true_classes, false)
    attr("num_true", num_true)
    attr("num_sampled", num_sampled)
    attr("unique", unique)
    attr("seed", seed)
    attr("seed2", seed2)
  }
}

fun TF.computeAccidentalHits(true_classes: Output, sampled_candidates: Output, num_true: Long, seed: Long = 0L, seed2: Long = 0L, name: String = "ComputeAccidentalHits") = run {
  buildOpTensors("ComputeAccidentalHits", name) {
    addInput(true_classes, false)
    addInput(sampled_candidates, false)
    attr("num_true", num_true)
    attr("seed", seed)
    attr("seed2", seed2)
  }
}

fun TF.fixedUnigramCandidateSampler(true_classes: Output, num_true: Long, num_sampled: Long, unique: Boolean, range_max: Long, vocab_file: String = "", distortion: Float = 1.0f, num_reserved_ids: Long = 0L, num_shards: Long = 1L, shard: Long = 0L, unigrams: Array<Float> = arrayOf(), seed: Long = 0L, seed2: Long = 0L, name: String = "FixedUnigramCandidateSampler") = run {
  buildOpTensors("FixedUnigramCandidateSampler", name) {
    addInput(true_classes, false)
    attr("num_true", num_true)
    attr("num_sampled", num_sampled)
    attr("unique", unique)
    attr("range_max", range_max)
    attr("vocab_file", vocab_file)
    attr("distortion", distortion)
    attr("num_reserved_ids", num_reserved_ids)
    attr("num_shards", num_shards)
    attr("shard", shard)
    attr("unigrams", unigrams)
    attr("seed", seed)
    attr("seed2", seed2)
  }
}

fun TF.learnedUnigramCandidateSampler(true_classes: Output, num_true: Long, num_sampled: Long, unique: Boolean, range_max: Long, seed: Long = 0L, seed2: Long = 0L, name: String = "LearnedUnigramCandidateSampler") = run {
  buildOpTensors("LearnedUnigramCandidateSampler", name) {
    addInput(true_classes, false)
    attr("num_true", num_true)
    attr("num_sampled", num_sampled)
    attr("unique", unique)
    attr("range_max", range_max)
    attr("seed", seed)
    attr("seed2", seed2)
  }
}

fun TF.logUniformCandidateSampler(true_classes: Output, num_true: Long, num_sampled: Long, unique: Boolean, range_max: Long, seed: Long = 0L, seed2: Long = 0L, name: String = "LogUniformCandidateSampler") = run {
  buildOpTensors("LogUniformCandidateSampler", name) {
    addInput(true_classes, false)
    attr("num_true", num_true)
    attr("num_sampled", num_sampled)
    attr("unique", unique)
    attr("range_max", range_max)
    attr("seed", seed)
    attr("seed2", seed2)
  }
}

fun TF.uniformCandidateSampler(true_classes: Output, num_true: Long, num_sampled: Long, unique: Boolean, range_max: Long, seed: Long = 0L, seed2: Long = 0L, name: String = "UniformCandidateSampler") = run {
  buildOpTensors("UniformCandidateSampler", name) {
    addInput(true_classes, false)
    attr("num_true", num_true)
    attr("num_sampled", num_sampled)
    attr("unique", unique)
    attr("range_max", range_max)
    attr("seed", seed)
    attr("seed2", seed2)
  }
}
