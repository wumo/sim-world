node {
  name: "Const"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq/observation"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "deepq/stochastic"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "deepq/update_eps"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "deepq/eps/initial_value"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/eps"
  op: "VariableV2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "deepq/eps/Assign"
  op: "Assign"
  input: "deepq/eps"
  input: "deepq/eps/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/eps/read"
  op: "Identity"
  input: "deepq/eps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/eps"
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/kernel/RandomUniform/RandomUniform/shape"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000@\000\000\000"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/kernel/RandomUniform/RandomUniform"
  op: "RandomUniform"
  input: "deepq/q_func/fully_connected/kernel/RandomUniform/RandomUniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/kernel/RandomUniform/min"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.29704428
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/kernel/RandomUniform/max"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.29704428
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/kernel/RandomUniform/Sub"
  op: "Sub"
  input: "deepq/q_func/fully_connected/kernel/RandomUniform/max"
  input: "deepq/q_func/fully_connected/kernel/RandomUniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/kernel/RandomUniform/Mul"
  op: "Mul"
  input: "deepq/q_func/fully_connected/kernel/RandomUniform/RandomUniform"
  input: "deepq/q_func/fully_connected/kernel/RandomUniform/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/kernel/RandomUniform"
  op: "Add"
  input: "deepq/q_func/fully_connected/kernel/RandomUniform/Mul"
  input: "deepq/q_func/fully_connected/kernel/RandomUniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/kernel"
  op: "VariableV2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/kernel/Assign"
  op: "Assign"
  input: "deepq/q_func/fully_connected/kernel"
  input: "deepq/q_func/fully_connected/kernel/RandomUniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/kernel/read"
  op: "Identity"
  input: "deepq/q_func/fully_connected/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/kernel"
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/bias/initial_value"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/bias"
  op: "VariableV2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/bias/Assign"
  op: "Assign"
  input: "deepq/q_func/fully_connected/bias"
  input: "deepq/q_func/fully_connected/bias/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/bias/read"
  op: "Identity"
  input: "deepq/q_func/fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/bias"
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/MatMul"
  op: "MatMul"
  input: "deepq/observation"
  input: "deepq/q_func/fully_connected/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "deepq/q_func/fully_connected/MatMul"
  input: "deepq/q_func/fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "deepq/q_func/Relu"
  op: "Relu"
  input: "deepq/q_func/fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/kernel/RandomUniform/RandomUniform/shape"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\002\000\000\000"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/kernel/RandomUniform/RandomUniform"
  op: "RandomUniform"
  input: "deepq/q_func/fully_connected_1/kernel/RandomUniform/RandomUniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/kernel/RandomUniform/min"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.30151135
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/kernel/RandomUniform/max"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.30151135
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/kernel/RandomUniform/Sub"
  op: "Sub"
  input: "deepq/q_func/fully_connected_1/kernel/RandomUniform/max"
  input: "deepq/q_func/fully_connected_1/kernel/RandomUniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/kernel/RandomUniform/Mul"
  op: "Mul"
  input: "deepq/q_func/fully_connected_1/kernel/RandomUniform/RandomUniform"
  input: "deepq/q_func/fully_connected_1/kernel/RandomUniform/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/kernel/RandomUniform"
  op: "Add"
  input: "deepq/q_func/fully_connected_1/kernel/RandomUniform/Mul"
  input: "deepq/q_func/fully_connected_1/kernel/RandomUniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/kernel"
  op: "VariableV2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/kernel/Assign"
  op: "Assign"
  input: "deepq/q_func/fully_connected_1/kernel"
  input: "deepq/q_func/fully_connected_1/kernel/RandomUniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/kernel/read"
  op: "Identity"
  input: "deepq/q_func/fully_connected_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/kernel"
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/bias/initial_value"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/bias"
  op: "VariableV2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/bias/Assign"
  op: "Assign"
  input: "deepq/q_func/fully_connected_1/bias"
  input: "deepq/q_func/fully_connected_1/bias/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/bias/read"
  op: "Identity"
  input: "deepq/q_func/fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/MatMul"
  op: "MatMul"
  input: "deepq/q_func/Relu"
  input: "deepq/q_func/fully_connected_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "deepq/q_func/fully_connected_1/MatMul"
  input: "deepq/q_func/fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "deepq/deterministic_actions/dimension"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq/deterministic_actions"
  op: "ArgMax"
  input: "deepq/q_func/fully_connected_1/BiasAdd"
  input: "deepq/deterministic_actions/dimension"
  attr {
    key: "output_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq/Shape"
  op: "Shape"
  input: "deepq/observation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq/strided_slice/stack"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq/strided_slice"
  op: "StridedSlice"
  input: "deepq/Shape"
  input: "deepq/strided_slice/stack"
  input: "deepq/strided_slice/stack_1"
  input: "deepq/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "deepq/stack"
  op: "Pack"
  input: "deepq/strided_slice"
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "N"
    value {
      i: 1
    }
  }
}
node {
  name: "deepq/random_actions/min"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq/random_actions/max"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq/random_actions/RandomUniformInt"
  op: "RandomUniformInt"
  input: "deepq/stack"
  input: "deepq/random_actions/min"
  input: "deepq/random_actions/max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
}
node {
  name: "deepq/random_actions/Sub"
  op: "Sub"
  input: "deepq/random_actions/max"
  input: "deepq/random_actions/min"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq/random_actions/Mul"
  op: "Mul"
  input: "deepq/random_actions/RandomUniformInt"
  input: "deepq/random_actions/Sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq/random_actions"
  op: "Add"
  input: "deepq/random_actions/Mul"
  input: "deepq/random_actions/min"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq/stack_1"
  op: "Pack"
  input: "deepq/strided_slice"
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "N"
    value {
      i: 1
    }
  }
}
node {
  name: "deepq/RandomUniform/min"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/RandomUniform/max"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/RandomUniform/RandomUniform"
  op: "RandomUniform"
  input: "deepq/stack_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
}
node {
  name: "deepq/RandomUniform/Sub"
  op: "Sub"
  input: "deepq/RandomUniform/max"
  input: "deepq/RandomUniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/RandomUniform/Mul"
  op: "Mul"
  input: "deepq/RandomUniform/RandomUniform"
  input: "deepq/RandomUniform/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/RandomUniform"
  op: "Add"
  input: "deepq/RandomUniform/Mul"
  input: "deepq/RandomUniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/Less"
  op: "Less"
  input: "deepq/RandomUniform"
  input: "deepq/eps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/stochastic_action"
  op: "Select"
  input: "deepq/Less"
  input: "deepq/random_actions"
  input: "deepq/deterministic_actions"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq/Switch"
  op: "Switch"
  input: "deepq/stochastic"
  input: "deepq/stochastic"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "deepq/switch_t"
  op: "Identity"
  input: "deepq/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "deepq/switch_f"
  op: "Identity"
  input: "deepq/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "deepq/pred_id"
  op: "Identity"
  input: "deepq/stochastic"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "deepq/Switch_1"
  op: "Switch"
  input: "deepq/stochastic_action"
  input: "deepq/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/stochastic_action"
      }
    }
  }
}
node {
  name: "deepq/Switch_2"
  op: "Switch"
  input: "deepq/deterministic_actions"
  input: "deepq/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/deterministic_actions"
      }
    }
  }
}
node {
  name: "deepq/Merge"
  op: "Merge"
  input: "deepq/Switch_1:1"
  input: "deepq/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "deepq/Const"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/GreaterEqual"
  op: "GreaterEqual"
  input: "deepq/update_eps"
  input: "deepq/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/Switch_3"
  op: "Switch"
  input: "deepq/GreaterEqual"
  input: "deepq/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "deepq/switch_t_1"
  op: "Identity"
  input: "deepq/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "deepq/switch_f_1"
  op: "Identity"
  input: "deepq/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "deepq/pred_id_1"
  op: "Identity"
  input: "deepq/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "deepq/Switch_4"
  op: "Switch"
  input: "deepq/update_eps"
  input: "deepq/pred_id_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/update_eps"
      }
    }
  }
}
node {
  name: "deepq/Switch_5"
  op: "RefSwitch"
  input: "deepq/eps"
  input: "deepq/pred_id_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/eps"
      }
    }
  }
}
node {
  name: "deepq/Merge_1"
  op: "Merge"
  input: "deepq/Switch_4:1"
  input: "deepq/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "deepq/Assign"
  op: "Assign"
  input: "deepq/eps"
  input: "deepq/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/obs_t"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "deepq_1/action"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "deepq_1/reward"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "deepq_1/obs_tp1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "deepq_1/done"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "deepq_1/weight"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "deepq_1/q_func/fully_connected/MatMul"
  op: "MatMul"
  input: "deepq_1/obs_t"
  input: "deepq/q_func/fully_connected/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/q_func/fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "deepq_1/q_func/fully_connected/MatMul"
  input: "deepq/q_func/fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "deepq_1/q_func/Relu"
  op: "Relu"
  input: "deepq_1/q_func/fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/q_func/fully_connected_1/MatMul"
  op: "MatMul"
  input: "deepq_1/q_func/Relu"
  input: "deepq/q_func/fully_connected_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/q_func/fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "deepq_1/q_func/fully_connected_1/MatMul"
  input: "deepq/q_func/fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/kernel/RandomUniform/RandomUniform/shape"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000@\000\000\000"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/kernel/RandomUniform/RandomUniform"
  op: "RandomUniform"
  input: "deepq/target_q_func/fully_connected/kernel/RandomUniform/RandomUniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/kernel/RandomUniform/min"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.29704428
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/kernel/RandomUniform/max"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.29704428
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/kernel/RandomUniform/Sub"
  op: "Sub"
  input: "deepq/target_q_func/fully_connected/kernel/RandomUniform/max"
  input: "deepq/target_q_func/fully_connected/kernel/RandomUniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/kernel/RandomUniform/Mul"
  op: "Mul"
  input: "deepq/target_q_func/fully_connected/kernel/RandomUniform/RandomUniform"
  input: "deepq/target_q_func/fully_connected/kernel/RandomUniform/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/kernel/RandomUniform"
  op: "Add"
  input: "deepq/target_q_func/fully_connected/kernel/RandomUniform/Mul"
  input: "deepq/target_q_func/fully_connected/kernel/RandomUniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/kernel"
  op: "VariableV2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/kernel/Assign"
  op: "Assign"
  input: "deepq/target_q_func/fully_connected/kernel"
  input: "deepq/target_q_func/fully_connected/kernel/RandomUniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/kernel/read"
  op: "Identity"
  input: "deepq/target_q_func/fully_connected/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected/kernel"
      }
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/bias/initial_value"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/bias"
  op: "VariableV2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/bias/Assign"
  op: "Assign"
  input: "deepq/target_q_func/fully_connected/bias"
  input: "deepq/target_q_func/fully_connected/bias/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/bias/read"
  op: "Identity"
  input: "deepq/target_q_func/fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected/bias"
      }
    }
  }
}
node {
  name: "deepq_1/target_q_func/fully_connected/MatMul"
  op: "MatMul"
  input: "deepq_1/obs_tp1"
  input: "deepq/target_q_func/fully_connected/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/target_q_func/fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "deepq_1/target_q_func/fully_connected/MatMul"
  input: "deepq/target_q_func/fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "deepq_1/target_q_func/Relu"
  op: "Relu"
  input: "deepq_1/target_q_func/fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/kernel/RandomUniform/RandomUniform/shape"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\002\000\000\000"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/kernel/RandomUniform/RandomUniform"
  op: "RandomUniform"
  input: "deepq/target_q_func/fully_connected_1/kernel/RandomUniform/RandomUniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/kernel/RandomUniform/min"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.30151135
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/kernel/RandomUniform/max"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.30151135
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/kernel/RandomUniform/Sub"
  op: "Sub"
  input: "deepq/target_q_func/fully_connected_1/kernel/RandomUniform/max"
  input: "deepq/target_q_func/fully_connected_1/kernel/RandomUniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/kernel/RandomUniform/Mul"
  op: "Mul"
  input: "deepq/target_q_func/fully_connected_1/kernel/RandomUniform/RandomUniform"
  input: "deepq/target_q_func/fully_connected_1/kernel/RandomUniform/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/kernel/RandomUniform"
  op: "Add"
  input: "deepq/target_q_func/fully_connected_1/kernel/RandomUniform/Mul"
  input: "deepq/target_q_func/fully_connected_1/kernel/RandomUniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/kernel"
  op: "VariableV2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/kernel/Assign"
  op: "Assign"
  input: "deepq/target_q_func/fully_connected_1/kernel"
  input: "deepq/target_q_func/fully_connected_1/kernel/RandomUniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/kernel/read"
  op: "Identity"
  input: "deepq/target_q_func/fully_connected_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected_1/kernel"
      }
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/bias/initial_value"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/bias"
  op: "VariableV2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/bias/Assign"
  op: "Assign"
  input: "deepq/target_q_func/fully_connected_1/bias"
  input: "deepq/target_q_func/fully_connected_1/bias/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/bias/read"
  op: "Identity"
  input: "deepq/target_q_func/fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "deepq_1/target_q_func/fully_connected_1/MatMul"
  op: "MatMul"
  input: "deepq_1/target_q_func/Relu"
  input: "deepq/target_q_func/fully_connected_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/target_q_func/fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "deepq_1/target_q_func/fully_connected_1/MatMul"
  input: "deepq/target_q_func/fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "deepq_1/Const"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Const_1"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Const_2"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/OneHot"
  op: "OneHot"
  input: "deepq_1/action"
  input: "deepq_1/Const"
  input: "deepq_1/Const_1"
  input: "deepq_1/Const_2"
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Mul"
  op: "Mul"
  input: "deepq_1/q_func/fully_connected_1/BiasAdd"
  input: "deepq_1/OneHot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Const_3"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Sum"
  op: "Sum"
  input: "deepq_1/Mul"
  input: "deepq_1/Const_3"
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/q_func_1/fully_connected/MatMul"
  op: "MatMul"
  input: "deepq_1/obs_tp1"
  input: "deepq/q_func/fully_connected/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/q_func_1/fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "deepq_1/q_func_1/fully_connected/MatMul"
  input: "deepq/q_func/fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "deepq_1/q_func_1/Relu"
  op: "Relu"
  input: "deepq_1/q_func_1/fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/q_func_1/fully_connected_1/MatMul"
  op: "MatMul"
  input: "deepq_1/q_func_1/Relu"
  input: "deepq/q_func/fully_connected_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/q_func_1/fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "deepq_1/q_func_1/fully_connected_1/MatMul"
  input: "deepq/q_func/fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "deepq_1/ArgMax/dimension"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/ArgMax"
  op: "ArgMax"
  input: "deepq_1/q_func_1/fully_connected_1/BiasAdd"
  input: "deepq_1/ArgMax/dimension"
  attr {
    key: "output_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Const_4"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Const_5"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Const_6"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/OneHot_1"
  op: "OneHot"
  input: "deepq_1/ArgMax"
  input: "deepq_1/Const_4"
  input: "deepq_1/Const_5"
  input: "deepq_1/Const_6"
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Mul_1"
  op: "Mul"
  input: "deepq_1/target_q_func/fully_connected_1/BiasAdd"
  input: "deepq_1/OneHot_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Const_7"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Sum_1"
  op: "Sum"
  input: "deepq_1/Mul_1"
  input: "deepq_1/Const_7"
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Const_8"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Sub"
  op: "Sub"
  input: "deepq_1/Const_8"
  input: "deepq_1/done"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Mul_2"
  op: "Mul"
  input: "deepq_1/Sub"
  input: "deepq_1/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Const_9"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Mul_3"
  op: "Mul"
  input: "deepq_1/Const_9"
  input: "deepq_1/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Add"
  op: "Add"
  input: "deepq_1/reward"
  input: "deepq_1/Mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/StopGradient"
  op: "StopGradient"
  input: "deepq_1/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Sub_1"
  op: "Sub"
  input: "deepq_1/Sum"
  input: "deepq_1/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Const_10"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Abs"
  op: "Abs"
  input: "deepq_1/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Less"
  op: "Less"
  input: "deepq_1/Abs"
  input: "deepq_1/Const_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Square"
  op: "Square"
  input: "deepq_1/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Const_11"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Mul_4"
  op: "Mul"
  input: "deepq_1/Square"
  input: "deepq_1/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Abs_1"
  op: "Abs"
  input: "deepq_1/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Const_12"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Mul_5"
  op: "Mul"
  input: "deepq_1/Const_12"
  input: "deepq_1/Const_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Sub_2"
  op: "Sub"
  input: "deepq_1/Abs_1"
  input: "deepq_1/Mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Mul_6"
  op: "Mul"
  input: "deepq_1/Const_10"
  input: "deepq_1/Sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Where"
  op: "Select"
  input: "deepq_1/Less"
  input: "deepq_1/Mul_4"
  input: "deepq_1/Mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Mul_7"
  op: "Mul"
  input: "deepq_1/weight"
  input: "deepq_1/Where"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Const_13"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/weighted_error"
  op: "Mean"
  input: "deepq_1/Mul_7"
  input: "deepq_1/Const_13"
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/OnesLike"
  op: "OnesLike"
  input: "deepq_1/weighted_error"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Shape"
  op: "Shape"
  input: "deepq_1/Mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Const_14"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Const_15"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Size"
  op: "Size"
  input: "deepq_1/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Add_1"
  op: "Add"
  input: "deepq_1/Const_13"
  input: "deepq_1/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Mod"
  op: "Mod"
  input: "deepq_1/Add_1"
  input: "deepq_1/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Range"
  op: "Range"
  input: "deepq_1/Const_14"
  input: "deepq_1/Size"
  input: "deepq_1/Const_15"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/OnesLike_1"
  op: "OnesLike"
  input: "deepq_1/Mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/DynamicStitch"
  op: "DynamicStitch"
  input: "deepq_1/Range"
  input: "deepq_1/Mod"
  input: "deepq_1/Shape"
  input: "deepq_1/OnesLike_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "deepq_1/Const_16"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Maximum"
  op: "Maximum"
  input: "deepq_1/DynamicStitch"
  input: "deepq_1/Const_16"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Div"
  op: "Div"
  input: "deepq_1/Shape"
  input: "deepq_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Reshape"
  op: "Reshape"
  input: "deepq_1/OnesLike"
  input: "deepq_1/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Tile"
  op: "Tile"
  input: "deepq_1/Reshape"
  input: "deepq_1/Div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Shape_1"
  op: "Shape"
  input: "deepq_1/Mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Shape_2"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Const_17"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Prod"
  op: "Prod"
  input: "deepq_1/Shape_1"
  input: "deepq_1/Const_17"
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Prod_1"
  op: "Prod"
  input: "deepq_1/Shape_2"
  input: "deepq_1/Const_17"
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Const_18"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Maximum_1"
  op: "Maximum"
  input: "deepq_1/Prod_1"
  input: "deepq_1/Const_18"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Div_1"
  op: "Div"
  input: "deepq_1/Prod"
  input: "deepq_1/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Cast"
  op: "Cast"
  input: "deepq_1/Div_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Div_2"
  op: "Div"
  input: "deepq_1/Tile"
  input: "deepq_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Mul_8"
  op: "Mul"
  input: "deepq_1/Div_2"
  input: "deepq_1/Where"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Mul_9"
  op: "Mul"
  input: "deepq_1/Div_2"
  input: "deepq_1/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Shape_3"
  op: "Shape"
  input: "deepq_1/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Shape_4"
  op: "Shape"
  input: "deepq_1/Where"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "deepq_1/Shape_3"
  input: "deepq_1/Shape_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Sum_2"
  op: "Sum"
  input: "deepq_1/Mul_8"
  input: "deepq_1/BroadcastGradientArgs"
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Reshape_1"
  op: "Reshape"
  input: "deepq_1/Sum_2"
  input: "deepq_1/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Sum_3"
  op: "Sum"
  input: "deepq_1/Mul_9"
  input: "deepq_1/BroadcastGradientArgs:1"
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Reshape_2"
  op: "Reshape"
  input: "deepq_1/Sum_3"
  input: "deepq_1/Shape_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/ZerosLike"
  op: "ZerosLike"
  input: "deepq_1/Mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Where_1"
  op: "Select"
  input: "deepq_1/Less"
  input: "deepq_1/Reshape_2"
  input: "deepq_1/ZerosLike"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Where_2"
  op: "Select"
  input: "deepq_1/Less"
  input: "deepq_1/ZerosLike"
  input: "deepq_1/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Mul_10"
  op: "Mul"
  input: "deepq_1/Where_1"
  input: "deepq_1/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Mul_11"
  op: "Mul"
  input: "deepq_1/Where_1"
  input: "deepq_1/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Shape_5"
  op: "Shape"
  input: "deepq_1/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Shape_6"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/BroadcastGradientArgs_1"
  op: "BroadcastGradientArgs"
  input: "deepq_1/Shape_5"
  input: "deepq_1/Shape_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Sum_4"
  op: "Sum"
  input: "deepq_1/Mul_10"
  input: "deepq_1/BroadcastGradientArgs_1"
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Reshape_3"
  op: "Reshape"
  input: "deepq_1/Sum_4"
  input: "deepq_1/Shape_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Sum_5"
  op: "Sum"
  input: "deepq_1/Mul_11"
  input: "deepq_1/BroadcastGradientArgs_1:1"
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Reshape_4"
  op: "Reshape"
  input: "deepq_1/Sum_5"
  input: "deepq_1/Shape_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Mul_12"
  op: "Mul"
  input: "deepq_1/Where_2"
  input: "deepq_1/Sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Mul_13"
  op: "Mul"
  input: "deepq_1/Where_2"
  input: "deepq_1/Const_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Shape_7"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Shape_8"
  op: "Shape"
  input: "deepq_1/Sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/BroadcastGradientArgs_2"
  op: "BroadcastGradientArgs"
  input: "deepq_1/Shape_7"
  input: "deepq_1/Shape_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Sum_6"
  op: "Sum"
  input: "deepq_1/Mul_12"
  input: "deepq_1/BroadcastGradientArgs_2"
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Reshape_5"
  op: "Reshape"
  input: "deepq_1/Sum_6"
  input: "deepq_1/Shape_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Sum_7"
  op: "Sum"
  input: "deepq_1/Mul_13"
  input: "deepq_1/BroadcastGradientArgs_2:1"
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Reshape_6"
  op: "Reshape"
  input: "deepq_1/Sum_7"
  input: "deepq_1/Shape_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Const_19"
  op: "Const"
  input: "^deepq_1/Reshape_3"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Mul_14"
  op: "Mul"
  input: "deepq_1/Sub_1"
  input: "deepq_1/Const_19"
  input: "^deepq_1/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Mul_15"
  op: "Mul"
  input: "deepq_1/Reshape_3"
  input: "deepq_1/Mul_14"
  input: "^deepq_1/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Identity"
  op: "Identity"
  input: "deepq_1/Reshape_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Neg"
  op: "Neg"
  input: "deepq_1/Reshape_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Shape_9"
  op: "Shape"
  input: "deepq_1/Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Shape_10"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/BroadcastGradientArgs_3"
  op: "BroadcastGradientArgs"
  input: "deepq_1/Shape_9"
  input: "deepq_1/Shape_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Sum_8"
  op: "Sum"
  input: "deepq_1/Identity"
  input: "deepq_1/BroadcastGradientArgs_3"
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Reshape_7"
  op: "Reshape"
  input: "deepq_1/Sum_8"
  input: "deepq_1/Shape_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Sum_9"
  op: "Sum"
  input: "deepq_1/Neg"
  input: "deepq_1/BroadcastGradientArgs_3:1"
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Reshape_8"
  op: "Reshape"
  input: "deepq_1/Sum_9"
  input: "deepq_1/Shape_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Sign"
  op: "Sign"
  input: "deepq_1/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Mul_16"
  op: "Mul"
  input: "deepq_1/Reshape_7"
  input: "deepq_1/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/AddN"
  op: "AddN"
  input: "deepq_1/Mul_15"
  input: "deepq_1/Mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "deepq_1/Identity_1"
  op: "Identity"
  input: "deepq_1/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Neg_1"
  op: "Neg"
  input: "deepq_1/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Shape_11"
  op: "Shape"
  input: "deepq_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Shape_12"
  op: "Shape"
  input: "deepq_1/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/BroadcastGradientArgs_4"
  op: "BroadcastGradientArgs"
  input: "deepq_1/Shape_11"
  input: "deepq_1/Shape_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Sum_10"
  op: "Sum"
  input: "deepq_1/Identity_1"
  input: "deepq_1/BroadcastGradientArgs_4"
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Reshape_9"
  op: "Reshape"
  input: "deepq_1/Sum_10"
  input: "deepq_1/Shape_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Sum_11"
  op: "Sum"
  input: "deepq_1/Neg_1"
  input: "deepq_1/BroadcastGradientArgs_4:1"
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Reshape_10"
  op: "Reshape"
  input: "deepq_1/Sum_11"
  input: "deepq_1/Shape_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Shape_13"
  op: "Shape"
  input: "deepq_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Const_20"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Const_21"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Size_1"
  op: "Size"
  input: "deepq_1/Shape_13"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Add_2"
  op: "Add"
  input: "deepq_1/Const_3"
  input: "deepq_1/Size_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Mod_1"
  op: "Mod"
  input: "deepq_1/Add_2"
  input: "deepq_1/Size_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Range_1"
  op: "Range"
  input: "deepq_1/Const_20"
  input: "deepq_1/Size_1"
  input: "deepq_1/Const_21"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/OnesLike_2"
  op: "OnesLike"
  input: "deepq_1/Mod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/DynamicStitch_1"
  op: "DynamicStitch"
  input: "deepq_1/Range_1"
  input: "deepq_1/Mod_1"
  input: "deepq_1/Shape_13"
  input: "deepq_1/OnesLike_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "deepq_1/Const_22"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Maximum_2"
  op: "Maximum"
  input: "deepq_1/DynamicStitch_1"
  input: "deepq_1/Const_22"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Div_3"
  op: "Div"
  input: "deepq_1/Shape_13"
  input: "deepq_1/Maximum_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Reshape_11"
  op: "Reshape"
  input: "deepq_1/Reshape_9"
  input: "deepq_1/DynamicStitch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Tile_1"
  op: "Tile"
  input: "deepq_1/Reshape_11"
  input: "deepq_1/Div_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Mul_17"
  op: "Mul"
  input: "deepq_1/Tile_1"
  input: "deepq_1/OneHot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Mul_18"
  op: "Mul"
  input: "deepq_1/Tile_1"
  input: "deepq_1/q_func/fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Shape_14"
  op: "Shape"
  input: "deepq_1/q_func/fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Shape_15"
  op: "Shape"
  input: "deepq_1/OneHot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/BroadcastGradientArgs_5"
  op: "BroadcastGradientArgs"
  input: "deepq_1/Shape_14"
  input: "deepq_1/Shape_15"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Sum_12"
  op: "Sum"
  input: "deepq_1/Mul_17"
  input: "deepq_1/BroadcastGradientArgs_5"
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Reshape_12"
  op: "Reshape"
  input: "deepq_1/Sum_12"
  input: "deepq_1/Shape_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Sum_13"
  op: "Sum"
  input: "deepq_1/Mul_18"
  input: "deepq_1/BroadcastGradientArgs_5:1"
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/Reshape_13"
  op: "Reshape"
  input: "deepq_1/Sum_13"
  input: "deepq_1/Shape_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/BiasAddGrad"
  op: "BiasAddGrad"
  input: "deepq_1/Reshape_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "deepq_1/Identity_2"
  op: "Identity"
  input: "deepq_1/Reshape_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/MatMul"
  op: "MatMul"
  input: "deepq_1/Identity_2"
  input: "deepq/q_func/fully_connected_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/MatMul_1"
  op: "MatMul"
  input: "deepq_1/q_func/Relu"
  input: "deepq_1/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/ReluGrad"
  op: "ReluGrad"
  input: "deepq_1/MatMul"
  input: "deepq_1/q_func/fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/BiasAddGrad_1"
  op: "BiasAddGrad"
  input: "deepq_1/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "deepq_1/Identity_3"
  op: "Identity"
  input: "deepq_1/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/MatMul_2"
  op: "MatMul"
  input: "deepq_1/Identity_3"
  input: "deepq/q_func/fully_connected/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/MatMul_3"
  op: "MatMul"
  input: "deepq_1/obs_t"
  input: "deepq_1/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/clip_by_norm/Cast"
  op: "Cast"
  input: "Const"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/clip_by_norm/Mul"
  op: "Mul"
  input: "deepq_1/MatMul_3"
  input: "deepq_1/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm/Const"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/clip_by_norm/Sum"
  op: "Sum"
  input: "deepq_1/clip_by_norm/Mul"
  input: "deepq_1/clip_by_norm/Const"
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/clip_by_norm/Sqrt"
  op: "Sqrt"
  input: "deepq_1/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm/Mul_1"
  op: "Mul"
  input: "deepq_1/MatMul_3"
  input: "deepq_1/clip_by_norm/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm/Maximum"
  op: "Maximum"
  input: "deepq_1/clip_by_norm/Sqrt"
  input: "deepq_1/clip_by_norm/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm/Div"
  op: "Div"
  input: "deepq_1/clip_by_norm/Mul_1"
  input: "deepq_1/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm"
  op: "Identity"
  input: "deepq_1/clip_by_norm/Div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_1/Cast"
  op: "Cast"
  input: "Const"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_1/Mul"
  op: "Mul"
  input: "deepq_1/BiasAddGrad_1"
  input: "deepq_1/BiasAddGrad_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_1/Const"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_1/Sum"
  op: "Sum"
  input: "deepq_1/clip_by_norm_1/Mul"
  input: "deepq_1/clip_by_norm_1/Const"
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_1/Sqrt"
  op: "Sqrt"
  input: "deepq_1/clip_by_norm_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_1/Mul_1"
  op: "Mul"
  input: "deepq_1/BiasAddGrad_1"
  input: "deepq_1/clip_by_norm_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_1/Maximum"
  op: "Maximum"
  input: "deepq_1/clip_by_norm_1/Sqrt"
  input: "deepq_1/clip_by_norm_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_1/Div"
  op: "Div"
  input: "deepq_1/clip_by_norm_1/Mul_1"
  input: "deepq_1/clip_by_norm_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_1"
  op: "Identity"
  input: "deepq_1/clip_by_norm_1/Div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_2/Cast"
  op: "Cast"
  input: "Const"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_2/Mul"
  op: "Mul"
  input: "deepq_1/MatMul_1"
  input: "deepq_1/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_2/Const"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_2/Sum"
  op: "Sum"
  input: "deepq_1/clip_by_norm_2/Mul"
  input: "deepq_1/clip_by_norm_2/Const"
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_2/Sqrt"
  op: "Sqrt"
  input: "deepq_1/clip_by_norm_2/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_2/Mul_1"
  op: "Mul"
  input: "deepq_1/MatMul_1"
  input: "deepq_1/clip_by_norm_2/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_2/Maximum"
  op: "Maximum"
  input: "deepq_1/clip_by_norm_2/Sqrt"
  input: "deepq_1/clip_by_norm_2/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_2/Div"
  op: "Div"
  input: "deepq_1/clip_by_norm_2/Mul_1"
  input: "deepq_1/clip_by_norm_2/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_2"
  op: "Identity"
  input: "deepq_1/clip_by_norm_2/Div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_3/Cast"
  op: "Cast"
  input: "Const"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_3/Mul"
  op: "Mul"
  input: "deepq_1/BiasAddGrad"
  input: "deepq_1/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_3/Const"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_3/Sum"
  op: "Sum"
  input: "deepq_1/clip_by_norm_3/Mul"
  input: "deepq_1/clip_by_norm_3/Const"
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_3/Sqrt"
  op: "Sqrt"
  input: "deepq_1/clip_by_norm_3/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_3/Mul_1"
  op: "Mul"
  input: "deepq_1/BiasAddGrad"
  input: "deepq_1/clip_by_norm_3/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_3/Maximum"
  op: "Maximum"
  input: "deepq_1/clip_by_norm_3/Sqrt"
  input: "deepq_1/clip_by_norm_3/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_3/Div"
  op: "Div"
  input: "deepq_1/clip_by_norm_3/Mul_1"
  input: "deepq_1/clip_by_norm_3/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_3"
  op: "Identity"
  input: "deepq_1/clip_by_norm_3/Div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/beta1_power"
  op: "VariableV2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "deepq_1/beta1_power/Assign"
  op: "Assign"
  input: "deepq_1/beta1_power"
  input: "deepq_1/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/beta1_power/read"
  op: "Identity"
  input: "deepq_1/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/beta1_power"
      }
    }
  }
}
node {
  name: "deepq_1/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/beta2_power"
  op: "VariableV2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "deepq_1/beta2_power/Assign"
  op: "Assign"
  input: "deepq_1/beta2_power"
  input: "deepq_1/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/beta2_power/read"
  op: "Identity"
  input: "deepq_1/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/beta2_power"
      }
    }
  }
}
node {
  name: "deepq_1/Adam/initial_value"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Adam"
  op: "VariableV2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "deepq_1/Adam/Assign"
  op: "Assign"
  input: "deepq_1/Adam"
  input: "deepq_1/Adam/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/Adam/read"
  op: "Identity"
  input: "deepq_1/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/Adam"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_1/initial_value"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Adam_1"
  op: "VariableV2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "deepq_1/Adam_1/Assign"
  op: "Assign"
  input: "deepq_1/Adam_1"
  input: "deepq_1/Adam_1/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/Adam_1/read"
  op: "Identity"
  input: "deepq_1/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/Adam_1"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_2/initial_value"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Adam_2"
  op: "VariableV2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "deepq_1/Adam_2/Assign"
  op: "Assign"
  input: "deepq_1/Adam_2"
  input: "deepq_1/Adam_2/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/Adam_2/read"
  op: "Identity"
  input: "deepq_1/Adam_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/Adam_2"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_3/initial_value"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Adam_3"
  op: "VariableV2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "deepq_1/Adam_3/Assign"
  op: "Assign"
  input: "deepq_1/Adam_3"
  input: "deepq_1/Adam_3/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/Adam_3/read"
  op: "Identity"
  input: "deepq_1/Adam_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/Adam_3"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_4/initial_value"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Adam_4"
  op: "VariableV2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "deepq_1/Adam_4/Assign"
  op: "Assign"
  input: "deepq_1/Adam_4"
  input: "deepq_1/Adam_4/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/Adam_4/read"
  op: "Identity"
  input: "deepq_1/Adam_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/Adam_4"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_5/initial_value"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Adam_5"
  op: "VariableV2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "deepq_1/Adam_5/Assign"
  op: "Assign"
  input: "deepq_1/Adam_5"
  input: "deepq_1/Adam_5/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/Adam_5/read"
  op: "Identity"
  input: "deepq_1/Adam_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/Adam_5"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_6/initial_value"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Adam_6"
  op: "VariableV2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "deepq_1/Adam_6/Assign"
  op: "Assign"
  input: "deepq_1/Adam_6"
  input: "deepq_1/Adam_6/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/Adam_6/read"
  op: "Identity"
  input: "deepq_1/Adam_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/Adam_6"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_7/initial_value"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Adam_7"
  op: "VariableV2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "deepq_1/Adam_7/Assign"
  op: "Assign"
  input: "deepq_1/Adam_7"
  input: "deepq_1/Adam_7/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/Adam_7/read"
  op: "Identity"
  input: "deepq_1/Adam_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/Adam_7"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_8/learning_rate"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Adam_8/beta1"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Adam_8/beta2"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Adam_8/epsilon"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0E-8
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Adam_8/update_Adam/Cast"
  op: "Cast"
  input: "deepq_1/beta1_power"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/kernel"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_8/update_Adam/Cast_1"
  op: "Cast"
  input: "deepq_1/beta2_power"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/kernel"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_8/update_Adam/ApplyAdam"
  op: "ApplyAdam"
  input: "deepq/q_func/fully_connected/kernel"
  input: "deepq_1/Adam"
  input: "deepq_1/Adam_1"
  input: "deepq_1/Adam_8/update_Adam/Cast"
  input: "deepq_1/Adam_8/update_Adam/Cast_1"
  input: "deepq_1/Adam_8/learning_rate"
  input: "deepq_1/Adam_8/beta1"
  input: "deepq_1/Adam_8/beta2"
  input: "deepq_1/Adam_8/epsilon"
  input: "deepq_1/clip_by_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/kernel"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_8/update_Adam_1/Cast"
  op: "Cast"
  input: "deepq_1/beta1_power"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/bias"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_8/update_Adam_1/Cast_1"
  op: "Cast"
  input: "deepq_1/beta2_power"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/bias"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_8/update_Adam_1/ApplyAdam"
  op: "ApplyAdam"
  input: "deepq/q_func/fully_connected/bias"
  input: "deepq_1/Adam_2"
  input: "deepq_1/Adam_3"
  input: "deepq_1/Adam_8/update_Adam_1/Cast"
  input: "deepq_1/Adam_8/update_Adam_1/Cast_1"
  input: "deepq_1/Adam_8/learning_rate"
  input: "deepq_1/Adam_8/beta1"
  input: "deepq_1/Adam_8/beta2"
  input: "deepq_1/Adam_8/epsilon"
  input: "deepq_1/clip_by_norm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/bias"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_8/update_Adam_2/Cast"
  op: "Cast"
  input: "deepq_1/beta1_power"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/kernel"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_8/update_Adam_2/Cast_1"
  op: "Cast"
  input: "deepq_1/beta2_power"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/kernel"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_8/update_Adam_2/ApplyAdam"
  op: "ApplyAdam"
  input: "deepq/q_func/fully_connected_1/kernel"
  input: "deepq_1/Adam_4"
  input: "deepq_1/Adam_5"
  input: "deepq_1/Adam_8/update_Adam_2/Cast"
  input: "deepq_1/Adam_8/update_Adam_2/Cast_1"
  input: "deepq_1/Adam_8/learning_rate"
  input: "deepq_1/Adam_8/beta1"
  input: "deepq_1/Adam_8/beta2"
  input: "deepq_1/Adam_8/epsilon"
  input: "deepq_1/clip_by_norm_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/kernel"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_8/update_Adam_3/Cast"
  op: "Cast"
  input: "deepq_1/beta1_power"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_8/update_Adam_3/Cast_1"
  op: "Cast"
  input: "deepq_1/beta2_power"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_8/update_Adam_3/ApplyAdam"
  op: "ApplyAdam"
  input: "deepq/q_func/fully_connected_1/bias"
  input: "deepq_1/Adam_6"
  input: "deepq_1/Adam_7"
  input: "deepq_1/Adam_8/update_Adam_3/Cast"
  input: "deepq_1/Adam_8/update_Adam_3/Cast_1"
  input: "deepq_1/Adam_8/learning_rate"
  input: "deepq_1/Adam_8/beta1"
  input: "deepq_1/Adam_8/beta2"
  input: "deepq_1/Adam_8/epsilon"
  input: "deepq_1/clip_by_norm_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_8/Mul"
  op: "Mul"
  input: "deepq_1/beta1_power"
  input: "deepq_1/Adam_8/beta1"
  input: "^deepq_1/Adam_8/update_Adam/ApplyAdam"
  input: "^deepq_1/Adam_8/update_Adam_1/ApplyAdam"
  input: "^deepq_1/Adam_8/update_Adam_2/ApplyAdam"
  input: "^deepq_1/Adam_8/update_Adam_3/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/beta1_power"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_8/Assign"
  op: "Assign"
  input: "deepq_1/beta1_power"
  input: "deepq_1/Adam_8/Mul"
  input: "^deepq_1/Adam_8/update_Adam/ApplyAdam"
  input: "^deepq_1/Adam_8/update_Adam_1/ApplyAdam"
  input: "^deepq_1/Adam_8/update_Adam_2/ApplyAdam"
  input: "^deepq_1/Adam_8/update_Adam_3/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/beta1_power"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_8/Mul_1"
  op: "Mul"
  input: "deepq_1/beta2_power"
  input: "deepq_1/Adam_8/beta2"
  input: "^deepq_1/Adam_8/update_Adam/ApplyAdam"
  input: "^deepq_1/Adam_8/update_Adam_1/ApplyAdam"
  input: "^deepq_1/Adam_8/update_Adam_2/ApplyAdam"
  input: "^deepq_1/Adam_8/update_Adam_3/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/beta1_power"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_8/Assign_1"
  op: "Assign"
  input: "deepq_1/beta2_power"
  input: "deepq_1/Adam_8/Mul_1"
  input: "^deepq_1/Adam_8/update_Adam/ApplyAdam"
  input: "^deepq_1/Adam_8/update_Adam_1/ApplyAdam"
  input: "^deepq_1/Adam_8/update_Adam_2/ApplyAdam"
  input: "^deepq_1/Adam_8/update_Adam_3/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/beta1_power"
      }
    }
  }
}
node {
  name: "deepq_1/Adam_8/Adam"
  op: "NoOp"
  input: "^deepq_1/Adam_8/Assign"
  input: "^deepq_1/Adam_8/Assign_1"
  input: "^deepq_1/Adam_8/update_Adam/ApplyAdam"
  input: "^deepq_1/Adam_8/update_Adam_1/ApplyAdam"
  input: "^deepq_1/Adam_8/update_Adam_2/ApplyAdam"
  input: "^deepq_1/Adam_8/update_Adam_3/ApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/beta1_power"
      }
    }
  }
}
node {
  name: "deepq_1/Assign"
  op: "Assign"
  input: "deepq/target_q_func/fully_connected/bias"
  input: "deepq/q_func/fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/Assign_1"
  op: "Assign"
  input: "deepq/target_q_func/fully_connected/kernel"
  input: "deepq/q_func/fully_connected/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/Assign_2"
  op: "Assign"
  input: "deepq/target_q_func/fully_connected_1/bias"
  input: "deepq/q_func/fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/Assign_3"
  op: "Assign"
  input: "deepq/target_q_func/fully_connected_1/kernel"
  input: "deepq/q_func/fully_connected_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/group_deps"
  op: "NoOp"
  input: "^deepq_1/Assign"
  input: "^deepq_1/Assign_1"
  input: "^deepq_1/Assign_2"
  input: "^deepq_1/Assign_3"
}
library {
}
versions {
  producer: 26
}
