node {
  name: "deepq/observation"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "deepq/stochastic"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "deepq/update_eps"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "deepq/eps/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/eps"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "deepq/eps"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/eps"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "deepq/eps/Assign"
  op: "Assign"
  input: "deepq/eps"
  input: "deepq/eps/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/eps"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/eps/read"
  op: "Identity"
  input: "deepq/eps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/eps"
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2970442771911621
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2970442771911621
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "deepq/q_func/fully_connected/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "deepq/q_func/fully_connected/weights/Initializer/random_uniform/max"
  input: "deepq/q_func/fully_connected/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/weights"
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "deepq/q_func/fully_connected/weights/Initializer/random_uniform/RandomUniform"
  input: "deepq/q_func/fully_connected/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/weights"
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/weights/Initializer/random_uniform"
  op: "Add"
  input: "deepq/q_func/fully_connected/weights/Initializer/random_uniform/mul"
  input: "deepq/q_func/fully_connected/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/weights"
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/weights/Assign"
  op: "Assign"
  input: "deepq/q_func/fully_connected/weights"
  input: "deepq/q_func/fully_connected/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/weights/read"
  op: "Identity"
  input: "deepq/q_func/fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/weights"
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/biases/Assign"
  op: "Assign"
  input: "deepq/q_func/fully_connected/biases"
  input: "deepq/q_func/fully_connected/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/biases/read"
  op: "Identity"
  input: "deepq/q_func/fully_connected/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/MatMul"
  op: "MatMul"
  input: "deepq/observation"
  input: "deepq/q_func/fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "deepq/q_func/fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "deepq/q_func/fully_connected/MatMul"
  input: "deepq/q_func/fully_connected/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "deepq/q_func/Relu"
  op: "Relu"
  input: "deepq/q_func/fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.30151134729385376
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.30151134729385376
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "deepq/q_func/fully_connected_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "deepq/q_func/fully_connected_1/weights/Initializer/random_uniform/max"
  input: "deepq/q_func/fully_connected_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "deepq/q_func/fully_connected_1/weights/Initializer/random_uniform/RandomUniform"
  input: "deepq/q_func/fully_connected_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "deepq/q_func/fully_connected_1/weights/Initializer/random_uniform/mul"
  input: "deepq/q_func/fully_connected_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/weights/Assign"
  op: "Assign"
  input: "deepq/q_func/fully_connected_1/weights"
  input: "deepq/q_func/fully_connected_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/weights/read"
  op: "Identity"
  input: "deepq/q_func/fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/biases/Assign"
  op: "Assign"
  input: "deepq/q_func/fully_connected_1/biases"
  input: "deepq/q_func/fully_connected_1/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/biases/read"
  op: "Identity"
  input: "deepq/q_func/fully_connected_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/biases"
      }
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/MatMul"
  op: "MatMul"
  input: "deepq/q_func/Relu"
  input: "deepq/q_func/fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "deepq/q_func/fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "deepq/q_func/fully_connected_1/MatMul"
  input: "deepq/q_func/fully_connected_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "deepq/deterministic_actions/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "deepq/deterministic_actions"
  op: "ArgMax"
  input: "deepq/q_func/fully_connected_1/BiasAdd"
  input: "deepq/deterministic_actions/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "deepq/Shape"
  op: "Shape"
  input: "deepq/observation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "deepq/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "deepq/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "deepq/strided_slice"
  op: "StridedSlice"
  input: "deepq/Shape"
  input: "deepq/strided_slice/stack"
  input: "deepq/strided_slice/stack_1"
  input: "deepq/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "deepq/stack"
  op: "Pack"
  input: "deepq/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "deepq/random_actions/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "deepq/random_actions/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2
      }
    }
  }
}
node {
  name: "deepq/random_actions"
  op: "RandomUniformInt"
  input: "deepq/stack"
  input: "deepq/random_actions/min"
  input: "deepq/random_actions/max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "deepq/stack_1"
  op: "Pack"
  input: "deepq/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "deepq/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "deepq/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "deepq/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "deepq/stack_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "deepq/random_uniform/sub"
  op: "Sub"
  input: "deepq/random_uniform/max"
  input: "deepq/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/random_uniform/mul"
  op: "Mul"
  input: "deepq/random_uniform/RandomUniform"
  input: "deepq/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/random_uniform"
  op: "Add"
  input: "deepq/random_uniform/mul"
  input: "deepq/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/Less"
  op: "Less"
  input: "deepq/random_uniform"
  input: "deepq/eps/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/stochastic_action"
  op: "Select"
  input: "deepq/Less"
  input: "deepq/random_actions"
  input: "deepq/deterministic_actions"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "deepq/output_actions/Switch"
  op: "Switch"
  input: "deepq/stochastic"
  input: "deepq/stochastic"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "deepq/output_actions/switch_t"
  op: "Identity"
  input: "deepq/output_actions/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "deepq/output_actions/switch_f"
  op: "Identity"
  input: "deepq/output_actions/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "deepq/output_actions/pred_id"
  op: "Identity"
  input: "deepq/stochastic"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "deepq/output_actions/Switch_1"
  op: "Switch"
  input: "deepq/stochastic_action"
  input: "deepq/output_actions/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/stochastic_action"
      }
    }
  }
}
node {
  name: "deepq/output_actions/Switch_2"
  op: "Switch"
  input: "deepq/deterministic_actions"
  input: "deepq/output_actions/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/deterministic_actions"
      }
    }
  }
}
node {
  name: "deepq/output_actions/Merge"
  op: "Merge"
  input: "deepq/output_actions/Switch_2"
  input: "deepq/output_actions/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "deepq/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "deepq/GreaterEqual"
  op: "GreaterEqual"
  input: "deepq/update_eps"
  input: "deepq/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/cond/Switch"
  op: "Switch"
  input: "deepq/GreaterEqual"
  input: "deepq/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "deepq/cond/switch_t"
  op: "Identity"
  input: "deepq/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "deepq/cond/switch_f"
  op: "Identity"
  input: "deepq/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "deepq/cond/pred_id"
  op: "Identity"
  input: "deepq/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "deepq/cond/Switch_1"
  op: "Switch"
  input: "deepq/update_eps"
  input: "deepq/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/update_eps"
      }
    }
  }
}
node {
  name: "deepq/cond/Switch_2"
  op: "Switch"
  input: "deepq/eps/read"
  input: "deepq/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/eps"
      }
    }
  }
}
node {
  name: "deepq/cond/Merge"
  op: "Merge"
  input: "deepq/cond/Switch_2"
  input: "deepq/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/Assign"
  op: "Assign"
  input: "deepq/eps"
  input: "deepq/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/eps"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/group_deps"
  op: "NoOp"
  input: "^deepq/Assign"
}
node {
  name: "deepq_1/obs_t"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "deepq_1/action"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "deepq_1/reward"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "deepq_1/obs_tp1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "deepq_1/done"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "deepq_1/weight"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "deepq_1/q_func/fully_connected/MatMul"
  op: "MatMul"
  input: "deepq_1/obs_t"
  input: "deepq/q_func/fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/q_func/fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "deepq_1/q_func/fully_connected/MatMul"
  input: "deepq/q_func/fully_connected/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "deepq_1/q_func/Relu"
  op: "Relu"
  input: "deepq_1/q_func/fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/q_func/fully_connected_1/MatMul"
  op: "MatMul"
  input: "deepq_1/q_func/Relu"
  input: "deepq/q_func/fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/q_func/fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "deepq_1/q_func/fully_connected_1/MatMul"
  input: "deepq/q_func/fully_connected_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2970442771911621
      }
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2970442771911621
      }
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "deepq/target_q_func/fully_connected/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "deepq/target_q_func/fully_connected/weights/Initializer/random_uniform/max"
  input: "deepq/target_q_func/fully_connected/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected/weights"
      }
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "deepq/target_q_func/fully_connected/weights/Initializer/random_uniform/RandomUniform"
  input: "deepq/target_q_func/fully_connected/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected/weights"
      }
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/weights/Initializer/random_uniform"
  op: "Add"
  input: "deepq/target_q_func/fully_connected/weights/Initializer/random_uniform/mul"
  input: "deepq/target_q_func/fully_connected/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected/weights"
      }
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/weights/Assign"
  op: "Assign"
  input: "deepq/target_q_func/fully_connected/weights"
  input: "deepq/target_q_func/fully_connected/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/weights/read"
  op: "Identity"
  input: "deepq/target_q_func/fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected/weights"
      }
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/biases/Assign"
  op: "Assign"
  input: "deepq/target_q_func/fully_connected/biases"
  input: "deepq/target_q_func/fully_connected/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected/biases/read"
  op: "Identity"
  input: "deepq/target_q_func/fully_connected/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected/biases"
      }
    }
  }
}
node {
  name: "deepq_1/target_q_func/fully_connected/MatMul"
  op: "MatMul"
  input: "deepq_1/obs_tp1"
  input: "deepq/target_q_func/fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/target_q_func/fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "deepq_1/target_q_func/fully_connected/MatMul"
  input: "deepq/target_q_func/fully_connected/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "deepq_1/target_q_func/Relu"
  op: "Relu"
  input: "deepq_1/target_q_func/fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.30151134729385376
      }
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.30151134729385376
      }
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "deepq/target_q_func/fully_connected_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "deepq/target_q_func/fully_connected_1/weights/Initializer/random_uniform/max"
  input: "deepq/target_q_func/fully_connected_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "deepq/target_q_func/fully_connected_1/weights/Initializer/random_uniform/RandomUniform"
  input: "deepq/target_q_func/fully_connected_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "deepq/target_q_func/fully_connected_1/weights/Initializer/random_uniform/mul"
  input: "deepq/target_q_func/fully_connected_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/weights/Assign"
  op: "Assign"
  input: "deepq/target_q_func/fully_connected_1/weights"
  input: "deepq/target_q_func/fully_connected_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/weights/read"
  op: "Identity"
  input: "deepq/target_q_func/fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/biases/Assign"
  op: "Assign"
  input: "deepq/target_q_func/fully_connected_1/biases"
  input: "deepq/target_q_func/fully_connected_1/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/target_q_func/fully_connected_1/biases/read"
  op: "Identity"
  input: "deepq/target_q_func/fully_connected_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected_1/biases"
      }
    }
  }
}
node {
  name: "deepq_1/target_q_func/fully_connected_1/MatMul"
  op: "MatMul"
  input: "deepq_1/target_q_func/Relu"
  input: "deepq/target_q_func/fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/target_q_func/fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "deepq_1/target_q_func/fully_connected_1/MatMul"
  input: "deepq/target_q_func/fully_connected_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "deepq_1/one_hot/on_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "deepq_1/one_hot/off_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "deepq_1/one_hot/depth"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "deepq_1/one_hot"
  op: "OneHot"
  input: "deepq_1/action"
  input: "deepq_1/one_hot/depth"
  input: "deepq_1/one_hot/on_value"
  input: "deepq_1/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "deepq_1/mul"
  op: "Mul"
  input: "deepq_1/q_func/fully_connected_1/BiasAdd"
  input: "deepq_1/one_hot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "deepq_1/Sum"
  op: "Sum"
  input: "deepq_1/mul"
  input: "deepq_1/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/q_func_1/fully_connected/MatMul"
  op: "MatMul"
  input: "deepq_1/obs_tp1"
  input: "deepq/q_func/fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/q_func_1/fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "deepq_1/q_func_1/fully_connected/MatMul"
  input: "deepq/q_func/fully_connected/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "deepq_1/q_func_1/Relu"
  op: "Relu"
  input: "deepq_1/q_func_1/fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/q_func_1/fully_connected_1/MatMul"
  op: "MatMul"
  input: "deepq_1/q_func_1/Relu"
  input: "deepq/q_func/fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/q_func_1/fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "deepq_1/q_func_1/fully_connected_1/MatMul"
  input: "deepq/q_func/fully_connected_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "deepq_1/ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "deepq_1/ArgMax"
  op: "ArgMax"
  input: "deepq_1/q_func_1/fully_connected_1/BiasAdd"
  input: "deepq_1/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "deepq_1/one_hot_1/on_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "deepq_1/one_hot_1/off_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "deepq_1/one_hot_1/depth"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "deepq_1/one_hot_1"
  op: "OneHot"
  input: "deepq_1/ArgMax"
  input: "deepq_1/one_hot_1/depth"
  input: "deepq_1/one_hot_1/on_value"
  input: "deepq_1/one_hot_1/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "deepq_1/mul_1"
  op: "Mul"
  input: "deepq_1/target_q_func/fully_connected_1/BiasAdd"
  input: "deepq_1/one_hot_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "deepq_1/Sum_1"
  op: "Sum"
  input: "deepq_1/mul_1"
  input: "deepq_1/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "deepq_1/sub"
  op: "Sub"
  input: "deepq_1/sub/x"
  input: "deepq_1/done"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/mul_2"
  op: "Mul"
  input: "deepq_1/sub"
  input: "deepq_1/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/mul_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "deepq_1/mul_3"
  op: "Mul"
  input: "deepq_1/mul_3/x"
  input: "deepq_1/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/add"
  op: "Add"
  input: "deepq_1/reward"
  input: "deepq_1/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/StopGradient"
  op: "StopGradient"
  input: "deepq_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/sub_1"
  op: "Sub"
  input: "deepq_1/Sum"
  input: "deepq_1/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Abs"
  op: "Abs"
  input: "deepq_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "deepq_1/Less"
  op: "Less"
  input: "deepq_1/Abs"
  input: "deepq_1/Less/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Square"
  op: "Square"
  input: "deepq_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "deepq_1/mul_4"
  op: "Mul"
  input: "deepq_1/Square"
  input: "deepq_1/mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Abs_1"
  op: "Abs"
  input: "deepq_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "deepq_1/sub_2"
  op: "Sub"
  input: "deepq_1/Abs_1"
  input: "deepq_1/sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/mul_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "deepq_1/mul_5"
  op: "Mul"
  input: "deepq_1/mul_5/x"
  input: "deepq_1/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Select"
  op: "Select"
  input: "deepq_1/Less"
  input: "deepq_1/mul_4"
  input: "deepq_1/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/mul_6"
  op: "Mul"
  input: "deepq_1/weight"
  input: "deepq_1/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "deepq_1/Mean"
  op: "Mean"
  input: "deepq_1/mul_6"
  input: "deepq_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "deepq_1/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "deepq_1/gradients/Fill"
  op: "Fill"
  input: "deepq_1/gradients/Shape"
  input: "deepq_1/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Mean_grad/Reshape"
  op: "Reshape"
  input: "deepq_1/gradients/Fill"
  input: "deepq_1/gradients/deepq_1/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Mean_grad/Shape"
  op: "Shape"
  input: "deepq_1/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Mean_grad/Tile"
  op: "Tile"
  input: "deepq_1/gradients/deepq_1/Mean_grad/Reshape"
  input: "deepq_1/gradients/deepq_1/Mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Mean_grad/Shape_1"
  op: "Shape"
  input: "deepq_1/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Mean_grad/Prod"
  op: "Prod"
  input: "deepq_1/gradients/deepq_1/Mean_grad/Shape_1"
  input: "deepq_1/gradients/deepq_1/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Mean_grad/Prod_1"
  op: "Prod"
  input: "deepq_1/gradients/deepq_1/Mean_grad/Shape_2"
  input: "deepq_1/gradients/deepq_1/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Mean_grad/Maximum"
  op: "Maximum"
  input: "deepq_1/gradients/deepq_1/Mean_grad/Prod_1"
  input: "deepq_1/gradients/deepq_1/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "deepq_1/gradients/deepq_1/Mean_grad/Prod"
  input: "deepq_1/gradients/deepq_1/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Mean_grad/Cast"
  op: "Cast"
  input: "deepq_1/gradients/deepq_1/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Mean_grad/truediv"
  op: "RealDiv"
  input: "deepq_1/gradients/deepq_1/Mean_grad/Tile"
  input: "deepq_1/gradients/deepq_1/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_6_grad/Shape"
  op: "Shape"
  input: "deepq_1/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_6_grad/Shape_1"
  op: "Shape"
  input: "deepq_1/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "deepq_1/gradients/deepq_1/mul_6_grad/Shape"
  input: "deepq_1/gradients/deepq_1/mul_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_6_grad/Mul"
  op: "Mul"
  input: "deepq_1/gradients/deepq_1/Mean_grad/truediv"
  input: "deepq_1/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_6_grad/Sum"
  op: "Sum"
  input: "deepq_1/gradients/deepq_1/mul_6_grad/Mul"
  input: "deepq_1/gradients/deepq_1/mul_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_6_grad/Reshape"
  op: "Reshape"
  input: "deepq_1/gradients/deepq_1/mul_6_grad/Sum"
  input: "deepq_1/gradients/deepq_1/mul_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_6_grad/Mul_1"
  op: "Mul"
  input: "deepq_1/weight"
  input: "deepq_1/gradients/deepq_1/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_6_grad/Sum_1"
  op: "Sum"
  input: "deepq_1/gradients/deepq_1/mul_6_grad/Mul_1"
  input: "deepq_1/gradients/deepq_1/mul_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_6_grad/Reshape_1"
  op: "Reshape"
  input: "deepq_1/gradients/deepq_1/mul_6_grad/Sum_1"
  input: "deepq_1/gradients/deepq_1/mul_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^deepq_1/gradients/deepq_1/mul_6_grad/Reshape"
  input: "^deepq_1/gradients/deepq_1/mul_6_grad/Reshape_1"
}
node {
  name: "deepq_1/gradients/deepq_1/mul_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "deepq_1/gradients/deepq_1/mul_6_grad/Reshape"
  input: "^deepq_1/gradients/deepq_1/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/mul_6_grad/Reshape"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "deepq_1/gradients/deepq_1/mul_6_grad/Reshape_1"
  input: "^deepq_1/gradients/deepq_1/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/mul_6_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "deepq_1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Select_grad/Select"
  op: "Select"
  input: "deepq_1/Less"
  input: "deepq_1/gradients/deepq_1/mul_6_grad/tuple/control_dependency_1"
  input: "deepq_1/gradients/deepq_1/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Select_grad/Select_1"
  op: "Select"
  input: "deepq_1/Less"
  input: "deepq_1/gradients/deepq_1/Select_grad/zeros_like"
  input: "deepq_1/gradients/deepq_1/mul_6_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^deepq_1/gradients/deepq_1/Select_grad/Select"
  input: "^deepq_1/gradients/deepq_1/Select_grad/Select_1"
}
node {
  name: "deepq_1/gradients/deepq_1/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "deepq_1/gradients/deepq_1/Select_grad/Select"
  input: "^deepq_1/gradients/deepq_1/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/Select_grad/Select"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "deepq_1/gradients/deepq_1/Select_grad/Select_1"
  input: "^deepq_1/gradients/deepq_1/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/Select_grad/Select_1"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_4_grad/Shape"
  op: "Shape"
  input: "deepq_1/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_4_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "deepq_1/gradients/deepq_1/mul_4_grad/Shape"
  input: "deepq_1/gradients/deepq_1/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_4_grad/Mul"
  op: "Mul"
  input: "deepq_1/gradients/deepq_1/Select_grad/tuple/control_dependency"
  input: "deepq_1/mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_4_grad/Sum"
  op: "Sum"
  input: "deepq_1/gradients/deepq_1/mul_4_grad/Mul"
  input: "deepq_1/gradients/deepq_1/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_4_grad/Reshape"
  op: "Reshape"
  input: "deepq_1/gradients/deepq_1/mul_4_grad/Sum"
  input: "deepq_1/gradients/deepq_1/mul_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_4_grad/Mul_1"
  op: "Mul"
  input: "deepq_1/Square"
  input: "deepq_1/gradients/deepq_1/Select_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_4_grad/Sum_1"
  op: "Sum"
  input: "deepq_1/gradients/deepq_1/mul_4_grad/Mul_1"
  input: "deepq_1/gradients/deepq_1/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "deepq_1/gradients/deepq_1/mul_4_grad/Sum_1"
  input: "deepq_1/gradients/deepq_1/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^deepq_1/gradients/deepq_1/mul_4_grad/Reshape"
  input: "^deepq_1/gradients/deepq_1/mul_4_grad/Reshape_1"
}
node {
  name: "deepq_1/gradients/deepq_1/mul_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "deepq_1/gradients/deepq_1/mul_4_grad/Reshape"
  input: "^deepq_1/gradients/deepq_1/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/mul_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "deepq_1/gradients/deepq_1/mul_4_grad/Reshape_1"
  input: "^deepq_1/gradients/deepq_1/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/mul_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_5_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_5_grad/Shape_1"
  op: "Shape"
  input: "deepq_1/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "deepq_1/gradients/deepq_1/mul_5_grad/Shape"
  input: "deepq_1/gradients/deepq_1/mul_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_5_grad/Mul"
  op: "Mul"
  input: "deepq_1/gradients/deepq_1/Select_grad/tuple/control_dependency_1"
  input: "deepq_1/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_5_grad/Sum"
  op: "Sum"
  input: "deepq_1/gradients/deepq_1/mul_5_grad/Mul"
  input: "deepq_1/gradients/deepq_1/mul_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_5_grad/Reshape"
  op: "Reshape"
  input: "deepq_1/gradients/deepq_1/mul_5_grad/Sum"
  input: "deepq_1/gradients/deepq_1/mul_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_5_grad/Mul_1"
  op: "Mul"
  input: "deepq_1/mul_5/x"
  input: "deepq_1/gradients/deepq_1/Select_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_5_grad/Sum_1"
  op: "Sum"
  input: "deepq_1/gradients/deepq_1/mul_5_grad/Mul_1"
  input: "deepq_1/gradients/deepq_1/mul_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_5_grad/Reshape_1"
  op: "Reshape"
  input: "deepq_1/gradients/deepq_1/mul_5_grad/Sum_1"
  input: "deepq_1/gradients/deepq_1/mul_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^deepq_1/gradients/deepq_1/mul_5_grad/Reshape"
  input: "^deepq_1/gradients/deepq_1/mul_5_grad/Reshape_1"
}
node {
  name: "deepq_1/gradients/deepq_1/mul_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "deepq_1/gradients/deepq_1/mul_5_grad/Reshape"
  input: "^deepq_1/gradients/deepq_1/mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/mul_5_grad/Reshape"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "deepq_1/gradients/deepq_1/mul_5_grad/Reshape_1"
  input: "^deepq_1/gradients/deepq_1/mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/mul_5_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Square_grad/Const"
  op: "Const"
  input: "^deepq_1/gradients/deepq_1/mul_4_grad/tuple/control_dependency"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Square_grad/Mul"
  op: "Mul"
  input: "deepq_1/sub_1"
  input: "deepq_1/gradients/deepq_1/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Square_grad/Mul_1"
  op: "Mul"
  input: "deepq_1/gradients/deepq_1/mul_4_grad/tuple/control_dependency"
  input: "deepq_1/gradients/deepq_1/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/sub_2_grad/Shape"
  op: "Shape"
  input: "deepq_1/Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/sub_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/sub_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "deepq_1/gradients/deepq_1/sub_2_grad/Shape"
  input: "deepq_1/gradients/deepq_1/sub_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/sub_2_grad/Sum"
  op: "Sum"
  input: "deepq_1/gradients/deepq_1/mul_5_grad/tuple/control_dependency_1"
  input: "deepq_1/gradients/deepq_1/sub_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/sub_2_grad/Reshape"
  op: "Reshape"
  input: "deepq_1/gradients/deepq_1/sub_2_grad/Sum"
  input: "deepq_1/gradients/deepq_1/sub_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/sub_2_grad/Sum_1"
  op: "Sum"
  input: "deepq_1/gradients/deepq_1/mul_5_grad/tuple/control_dependency_1"
  input: "deepq_1/gradients/deepq_1/sub_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/sub_2_grad/Neg"
  op: "Neg"
  input: "deepq_1/gradients/deepq_1/sub_2_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/sub_2_grad/Reshape_1"
  op: "Reshape"
  input: "deepq_1/gradients/deepq_1/sub_2_grad/Neg"
  input: "deepq_1/gradients/deepq_1/sub_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/sub_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^deepq_1/gradients/deepq_1/sub_2_grad/Reshape"
  input: "^deepq_1/gradients/deepq_1/sub_2_grad/Reshape_1"
}
node {
  name: "deepq_1/gradients/deepq_1/sub_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "deepq_1/gradients/deepq_1/sub_2_grad/Reshape"
  input: "^deepq_1/gradients/deepq_1/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/sub_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/sub_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "deepq_1/gradients/deepq_1/sub_2_grad/Reshape_1"
  input: "^deepq_1/gradients/deepq_1/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/sub_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Abs_1_grad/Sign"
  op: "Sign"
  input: "deepq_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Abs_1_grad/mul"
  op: "Mul"
  input: "deepq_1/gradients/deepq_1/sub_2_grad/tuple/control_dependency"
  input: "deepq_1/gradients/deepq_1/Abs_1_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/gradients/AddN"
  op: "AddN"
  input: "deepq_1/gradients/deepq_1/Square_grad/Mul_1"
  input: "deepq_1/gradients/deepq_1/Abs_1_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/Square_grad/Mul_1"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/sub_1_grad/Shape"
  op: "Shape"
  input: "deepq_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/sub_1_grad/Shape_1"
  op: "Shape"
  input: "deepq_1/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "deepq_1/gradients/deepq_1/sub_1_grad/Shape"
  input: "deepq_1/gradients/deepq_1/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/sub_1_grad/Sum"
  op: "Sum"
  input: "deepq_1/gradients/AddN"
  input: "deepq_1/gradients/deepq_1/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/sub_1_grad/Reshape"
  op: "Reshape"
  input: "deepq_1/gradients/deepq_1/sub_1_grad/Sum"
  input: "deepq_1/gradients/deepq_1/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/sub_1_grad/Sum_1"
  op: "Sum"
  input: "deepq_1/gradients/AddN"
  input: "deepq_1/gradients/deepq_1/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/sub_1_grad/Neg"
  op: "Neg"
  input: "deepq_1/gradients/deepq_1/sub_1_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "deepq_1/gradients/deepq_1/sub_1_grad/Neg"
  input: "deepq_1/gradients/deepq_1/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^deepq_1/gradients/deepq_1/sub_1_grad/Reshape"
  input: "^deepq_1/gradients/deepq_1/sub_1_grad/Reshape_1"
}
node {
  name: "deepq_1/gradients/deepq_1/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "deepq_1/gradients/deepq_1/sub_1_grad/Reshape"
  input: "^deepq_1/gradients/deepq_1/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/sub_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "deepq_1/gradients/deepq_1/sub_1_grad/Reshape_1"
  input: "^deepq_1/gradients/deepq_1/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/sub_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Sum_grad/Shape"
  op: "Shape"
  input: "deepq_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Sum_grad/add"
  op: "Add"
  input: "deepq_1/Sum/reduction_indices"
  input: "deepq_1/gradients/deepq_1/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Sum_grad/mod"
  op: "FloorMod"
  input: "deepq_1/gradients/deepq_1/Sum_grad/add"
  input: "deepq_1/gradients/deepq_1/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Sum_grad/range"
  op: "Range"
  input: "deepq_1/gradients/deepq_1/Sum_grad/range/start"
  input: "deepq_1/gradients/deepq_1/Sum_grad/Size"
  input: "deepq_1/gradients/deepq_1/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Sum_grad/Fill"
  op: "Fill"
  input: "deepq_1/gradients/deepq_1/Sum_grad/Shape_1"
  input: "deepq_1/gradients/deepq_1/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "deepq_1/gradients/deepq_1/Sum_grad/range"
  input: "deepq_1/gradients/deepq_1/Sum_grad/mod"
  input: "deepq_1/gradients/deepq_1/Sum_grad/Shape"
  input: "deepq_1/gradients/deepq_1/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Sum_grad/Maximum"
  op: "Maximum"
  input: "deepq_1/gradients/deepq_1/Sum_grad/DynamicStitch"
  input: "deepq_1/gradients/deepq_1/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "deepq_1/gradients/deepq_1/Sum_grad/Shape"
  input: "deepq_1/gradients/deepq_1/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Sum_grad/Reshape"
  op: "Reshape"
  input: "deepq_1/gradients/deepq_1/sub_1_grad/tuple/control_dependency"
  input: "deepq_1/gradients/deepq_1/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/Sum_grad/Tile"
  op: "Tile"
  input: "deepq_1/gradients/deepq_1/Sum_grad/Reshape"
  input: "deepq_1/gradients/deepq_1/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_grad/Shape"
  op: "Shape"
  input: "deepq_1/q_func/fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_grad/Shape_1"
  op: "Shape"
  input: "deepq_1/one_hot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "deepq_1/gradients/deepq_1/mul_grad/Shape"
  input: "deepq_1/gradients/deepq_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_grad/Mul"
  op: "Mul"
  input: "deepq_1/gradients/deepq_1/Sum_grad/Tile"
  input: "deepq_1/one_hot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_grad/Sum"
  op: "Sum"
  input: "deepq_1/gradients/deepq_1/mul_grad/Mul"
  input: "deepq_1/gradients/deepq_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_grad/Reshape"
  op: "Reshape"
  input: "deepq_1/gradients/deepq_1/mul_grad/Sum"
  input: "deepq_1/gradients/deepq_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_grad/Mul_1"
  op: "Mul"
  input: "deepq_1/q_func/fully_connected_1/BiasAdd"
  input: "deepq_1/gradients/deepq_1/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_grad/Sum_1"
  op: "Sum"
  input: "deepq_1/gradients/deepq_1/mul_grad/Mul_1"
  input: "deepq_1/gradients/deepq_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "deepq_1/gradients/deepq_1/mul_grad/Sum_1"
  input: "deepq_1/gradients/deepq_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^deepq_1/gradients/deepq_1/mul_grad/Reshape"
  input: "^deepq_1/gradients/deepq_1/mul_grad/Reshape_1"
}
node {
  name: "deepq_1/gradients/deepq_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "deepq_1/gradients/deepq_1/mul_grad/Reshape"
  input: "^deepq_1/gradients/deepq_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "deepq_1/gradients/deepq_1/mul_grad/Reshape_1"
  input: "^deepq_1/gradients/deepq_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/q_func/fully_connected_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "deepq_1/gradients/deepq_1/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/q_func/fully_connected_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^deepq_1/gradients/deepq_1/mul_grad/tuple/control_dependency"
  input: "^deepq_1/gradients/deepq_1/q_func/fully_connected_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "deepq_1/gradients/deepq_1/q_func/fully_connected_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "deepq_1/gradients/deepq_1/mul_grad/tuple/control_dependency"
  input: "^deepq_1/gradients/deepq_1/q_func/fully_connected_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/q_func/fully_connected_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "deepq_1/gradients/deepq_1/q_func/fully_connected_1/BiasAdd_grad/BiasAddGrad"
  input: "^deepq_1/gradients/deepq_1/q_func/fully_connected_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/q_func/fully_connected_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/q_func/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "deepq_1/gradients/deepq_1/q_func/fully_connected_1/BiasAdd_grad/tuple/control_dependency"
  input: "deepq/q_func/fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/q_func/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "deepq_1/q_func/Relu"
  input: "deepq_1/gradients/deepq_1/q_func/fully_connected_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/q_func/fully_connected_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^deepq_1/gradients/deepq_1/q_func/fully_connected_1/MatMul_grad/MatMul"
  input: "^deepq_1/gradients/deepq_1/q_func/fully_connected_1/MatMul_grad/MatMul_1"
}
node {
  name: "deepq_1/gradients/deepq_1/q_func/fully_connected_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "deepq_1/gradients/deepq_1/q_func/fully_connected_1/MatMul_grad/MatMul"
  input: "^deepq_1/gradients/deepq_1/q_func/fully_connected_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/q_func/fully_connected_1/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/q_func/fully_connected_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "deepq_1/gradients/deepq_1/q_func/fully_connected_1/MatMul_grad/MatMul_1"
  input: "^deepq_1/gradients/deepq_1/q_func/fully_connected_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/q_func/fully_connected_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/q_func/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "deepq_1/gradients/deepq_1/q_func/fully_connected_1/MatMul_grad/tuple/control_dependency"
  input: "deepq_1/q_func/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/q_func/fully_connected/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "deepq_1/gradients/deepq_1/q_func/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/q_func/fully_connected/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^deepq_1/gradients/deepq_1/q_func/Relu_grad/ReluGrad"
  input: "^deepq_1/gradients/deepq_1/q_func/fully_connected/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "deepq_1/gradients/deepq_1/q_func/fully_connected/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "deepq_1/gradients/deepq_1/q_func/Relu_grad/ReluGrad"
  input: "^deepq_1/gradients/deepq_1/q_func/fully_connected/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/q_func/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/q_func/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "deepq_1/gradients/deepq_1/q_func/fully_connected/BiasAdd_grad/BiasAddGrad"
  input: "^deepq_1/gradients/deepq_1/q_func/fully_connected/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/q_func/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/q_func/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "deepq_1/gradients/deepq_1/q_func/fully_connected/BiasAdd_grad/tuple/control_dependency"
  input: "deepq/q_func/fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/q_func/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "deepq_1/obs_t"
  input: "deepq_1/gradients/deepq_1/q_func/fully_connected/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/q_func/fully_connected/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^deepq_1/gradients/deepq_1/q_func/fully_connected/MatMul_grad/MatMul"
  input: "^deepq_1/gradients/deepq_1/q_func/fully_connected/MatMul_grad/MatMul_1"
}
node {
  name: "deepq_1/gradients/deepq_1/q_func/fully_connected/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "deepq_1/gradients/deepq_1/q_func/fully_connected/MatMul_grad/MatMul"
  input: "^deepq_1/gradients/deepq_1/q_func/fully_connected/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/q_func/fully_connected/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "deepq_1/gradients/deepq_1/q_func/fully_connected/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "deepq_1/gradients/deepq_1/q_func/fully_connected/MatMul_grad/MatMul_1"
  input: "^deepq_1/gradients/deepq_1/q_func/fully_connected/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq_1/gradients/deepq_1/q_func/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "deepq_1/clip_by_norm/mul"
  op: "Mul"
  input: "deepq_1/gradients/deepq_1/q_func/fully_connected/MatMul_grad/tuple/control_dependency_1"
  input: "deepq_1/gradients/deepq_1/q_func/fully_connected/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "deepq_1/clip_by_norm/Sum"
  op: "Sum"
  input: "deepq_1/clip_by_norm/mul"
  input: "deepq_1/clip_by_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/clip_by_norm/Sqrt"
  op: "Sqrt"
  input: "deepq_1/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "deepq_1/clip_by_norm/mul_1"
  op: "Mul"
  input: "deepq_1/gradients/deepq_1/q_func/fully_connected/MatMul_grad/tuple/control_dependency_1"
  input: "deepq_1/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "deepq_1/clip_by_norm/Maximum"
  op: "Maximum"
  input: "deepq_1/clip_by_norm/Sqrt"
  input: "deepq_1/clip_by_norm/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm/truediv"
  op: "RealDiv"
  input: "deepq_1/clip_by_norm/mul_1"
  input: "deepq_1/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm"
  op: "Identity"
  input: "deepq_1/clip_by_norm/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_1/mul"
  op: "Mul"
  input: "deepq_1/gradients/deepq_1/q_func/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  input: "deepq_1/gradients/deepq_1/q_func/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_1/Sum"
  op: "Sum"
  input: "deepq_1/clip_by_norm_1/mul"
  input: "deepq_1/clip_by_norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_1/Sqrt"
  op: "Sqrt"
  input: "deepq_1/clip_by_norm_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_1/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_1/mul_1"
  op: "Mul"
  input: "deepq_1/gradients/deepq_1/q_func/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  input: "deepq_1/clip_by_norm_1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_1/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_1/Maximum"
  op: "Maximum"
  input: "deepq_1/clip_by_norm_1/Sqrt"
  input: "deepq_1/clip_by_norm_1/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_1/truediv"
  op: "RealDiv"
  input: "deepq_1/clip_by_norm_1/mul_1"
  input: "deepq_1/clip_by_norm_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_1"
  op: "Identity"
  input: "deepq_1/clip_by_norm_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_2/mul"
  op: "Mul"
  input: "deepq_1/gradients/deepq_1/q_func/fully_connected_1/MatMul_grad/tuple/control_dependency_1"
  input: "deepq_1/gradients/deepq_1/q_func/fully_connected_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_2/Sum"
  op: "Sum"
  input: "deepq_1/clip_by_norm_2/mul"
  input: "deepq_1/clip_by_norm_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_2/Sqrt"
  op: "Sqrt"
  input: "deepq_1/clip_by_norm_2/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_2/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_2/mul_1"
  op: "Mul"
  input: "deepq_1/gradients/deepq_1/q_func/fully_connected_1/MatMul_grad/tuple/control_dependency_1"
  input: "deepq_1/clip_by_norm_2/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_2/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_2/Maximum"
  op: "Maximum"
  input: "deepq_1/clip_by_norm_2/Sqrt"
  input: "deepq_1/clip_by_norm_2/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_2/truediv"
  op: "RealDiv"
  input: "deepq_1/clip_by_norm_2/mul_1"
  input: "deepq_1/clip_by_norm_2/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_2"
  op: "Identity"
  input: "deepq_1/clip_by_norm_2/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_3/mul"
  op: "Mul"
  input: "deepq_1/gradients/deepq_1/q_func/fully_connected_1/BiasAdd_grad/tuple/control_dependency_1"
  input: "deepq_1/gradients/deepq_1/q_func/fully_connected_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_3/Sum"
  op: "Sum"
  input: "deepq_1/clip_by_norm_3/mul"
  input: "deepq_1/clip_by_norm_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_3/Sqrt"
  op: "Sqrt"
  input: "deepq_1/clip_by_norm_3/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_3/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_3/mul_1"
  op: "Mul"
  input: "deepq_1/gradients/deepq_1/q_func/fully_connected_1/BiasAdd_grad/tuple/control_dependency_1"
  input: "deepq_1/clip_by_norm_3/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_3/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_3/Maximum"
  op: "Maximum"
  input: "deepq_1/clip_by_norm_3/Sqrt"
  input: "deepq_1/clip_by_norm_3/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_3/truediv"
  op: "RealDiv"
  input: "deepq_1/clip_by_norm_3/mul_1"
  input: "deepq_1/clip_by_norm_3/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/clip_by_norm_3"
  op: "Identity"
  input: "deepq_1/clip_by_norm_3/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "deepq_1/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "deepq_1/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "deepq_1/beta1_power/Assign"
  op: "Assign"
  input: "deepq_1/beta1_power"
  input: "deepq_1/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/beta1_power/read"
  op: "Identity"
  input: "deepq_1/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
}
node {
  name: "deepq_1/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "deepq_1/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "deepq_1/beta2_power/Assign"
  op: "Assign"
  input: "deepq_1/beta2_power"
  input: "deepq_1/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/beta2_power/read"
  op: "Identity"
  input: "deepq_1/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "deepq/deepq/q_func/fully_connected/weights/Adam"
  input: "deepq/deepq/q_func/fully_connected/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected/weights/Adam/read"
  op: "Identity"
  input: "deepq/deepq/q_func/fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/weights"
      }
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "deepq/deepq/q_func/fully_connected/weights/Adam_1"
  input: "deepq/deepq/q_func/fully_connected/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "deepq/deepq/q_func/fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/weights"
      }
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected/biases/Adam/Assign"
  op: "Assign"
  input: "deepq/deepq/q_func/fully_connected/biases/Adam"
  input: "deepq/deepq/q_func/fully_connected/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected/biases/Adam/read"
  op: "Identity"
  input: "deepq/deepq/q_func/fully_connected/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected/biases/Adam_1/Assign"
  op: "Assign"
  input: "deepq/deepq/q_func/fully_connected/biases/Adam_1"
  input: "deepq/deepq/q_func/fully_connected/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected/biases/Adam_1/read"
  op: "Identity"
  input: "deepq/deepq/q_func/fully_connected/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected_1/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "deepq/deepq/q_func/fully_connected_1/weights/Adam"
  input: "deepq/deepq/q_func/fully_connected_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "deepq/deepq/q_func/fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected_1/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "deepq/deepq/q_func/fully_connected_1/weights/Adam_1"
  input: "deepq/deepq/q_func/fully_connected_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "deepq/deepq/q_func/fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected_1/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected_1/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected_1/biases/Adam/Assign"
  op: "Assign"
  input: "deepq/deepq/q_func/fully_connected_1/biases/Adam"
  input: "deepq/deepq/q_func/fully_connected_1/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected_1/biases/Adam/read"
  op: "Identity"
  input: "deepq/deepq/q_func/fully_connected_1/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/biases"
      }
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected_1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected_1/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected_1/biases/Adam_1/Assign"
  op: "Assign"
  input: "deepq/deepq/q_func/fully_connected_1/biases/Adam_1"
  input: "deepq/deepq/q_func/fully_connected_1/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq/deepq/q_func/fully_connected_1/biases/Adam_1/read"
  op: "Identity"
  input: "deepq/deepq/q_func/fully_connected_1/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/biases"
      }
    }
  }
}
node {
  name: "deepq_1/Adam/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "deepq_1/Adam/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "deepq_1/Adam/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "deepq_1/Adam/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "deepq_1/Adam/update_deepq/q_func/fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "deepq/q_func/fully_connected/weights"
  input: "deepq/deepq/q_func/fully_connected/weights/Adam"
  input: "deepq/deepq/q_func/fully_connected/weights/Adam_1"
  input: "deepq_1/beta1_power/read"
  input: "deepq_1/beta2_power/read"
  input: "deepq_1/Adam/learning_rate"
  input: "deepq_1/Adam/beta1"
  input: "deepq_1/Adam/beta2"
  input: "deepq_1/Adam/epsilon"
  input: "deepq_1/clip_by_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/Adam/update_deepq/q_func/fully_connected/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "deepq/q_func/fully_connected/biases"
  input: "deepq/deepq/q_func/fully_connected/biases/Adam"
  input: "deepq/deepq/q_func/fully_connected/biases/Adam_1"
  input: "deepq_1/beta1_power/read"
  input: "deepq_1/beta2_power/read"
  input: "deepq_1/Adam/learning_rate"
  input: "deepq_1/Adam/beta1"
  input: "deepq_1/Adam/beta2"
  input: "deepq_1/Adam/epsilon"
  input: "deepq_1/clip_by_norm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/Adam/update_deepq/q_func/fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "deepq/q_func/fully_connected_1/weights"
  input: "deepq/deepq/q_func/fully_connected_1/weights/Adam"
  input: "deepq/deepq/q_func/fully_connected_1/weights/Adam_1"
  input: "deepq_1/beta1_power/read"
  input: "deepq_1/beta2_power/read"
  input: "deepq_1/Adam/learning_rate"
  input: "deepq_1/Adam/beta1"
  input: "deepq_1/Adam/beta2"
  input: "deepq_1/Adam/epsilon"
  input: "deepq_1/clip_by_norm_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/Adam/update_deepq/q_func/fully_connected_1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "deepq/q_func/fully_connected_1/biases"
  input: "deepq/deepq/q_func/fully_connected_1/biases/Adam"
  input: "deepq/deepq/q_func/fully_connected_1/biases/Adam_1"
  input: "deepq_1/beta1_power/read"
  input: "deepq_1/beta2_power/read"
  input: "deepq_1/Adam/learning_rate"
  input: "deepq_1/Adam/beta1"
  input: "deepq_1/Adam/beta2"
  input: "deepq_1/Adam/epsilon"
  input: "deepq_1/clip_by_norm_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "deepq_1/Adam/mul"
  op: "Mul"
  input: "deepq_1/beta1_power/read"
  input: "deepq_1/Adam/beta1"
  input: "^deepq_1/Adam/update_deepq/q_func/fully_connected/biases/ApplyAdam"
  input: "^deepq_1/Adam/update_deepq/q_func/fully_connected/weights/ApplyAdam"
  input: "^deepq_1/Adam/update_deepq/q_func/fully_connected_1/biases/ApplyAdam"
  input: "^deepq_1/Adam/update_deepq/q_func/fully_connected_1/weights/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
}
node {
  name: "deepq_1/Adam/Assign"
  op: "Assign"
  input: "deepq_1/beta1_power"
  input: "deepq_1/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/Adam/mul_1"
  op: "Mul"
  input: "deepq_1/beta2_power/read"
  input: "deepq_1/Adam/beta2"
  input: "^deepq_1/Adam/update_deepq/q_func/fully_connected/biases/ApplyAdam"
  input: "^deepq_1/Adam/update_deepq/q_func/fully_connected/weights/ApplyAdam"
  input: "^deepq_1/Adam/update_deepq/q_func/fully_connected_1/biases/ApplyAdam"
  input: "^deepq_1/Adam/update_deepq/q_func/fully_connected_1/weights/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
}
node {
  name: "deepq_1/Adam/Assign_1"
  op: "Assign"
  input: "deepq_1/beta2_power"
  input: "deepq_1/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/q_func/fully_connected/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/Adam"
  op: "NoOp"
  input: "^deepq_1/Adam/Assign"
  input: "^deepq_1/Adam/Assign_1"
  input: "^deepq_1/Adam/update_deepq/q_func/fully_connected/biases/ApplyAdam"
  input: "^deepq_1/Adam/update_deepq/q_func/fully_connected/weights/ApplyAdam"
  input: "^deepq_1/Adam/update_deepq/q_func/fully_connected_1/biases/ApplyAdam"
  input: "^deepq_1/Adam/update_deepq/q_func/fully_connected_1/weights/ApplyAdam"
}
node {
  name: "deepq_1/Assign"
  op: "Assign"
  input: "deepq/target_q_func/fully_connected/biases"
  input: "deepq/q_func/fully_connected/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/Assign_1"
  op: "Assign"
  input: "deepq/target_q_func/fully_connected/weights"
  input: "deepq/q_func/fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/Assign_2"
  op: "Assign"
  input: "deepq/target_q_func/fully_connected_1/biases"
  input: "deepq/q_func/fully_connected_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/Assign_3"
  op: "Assign"
  input: "deepq/target_q_func/fully_connected_1/weights"
  input: "deepq/q_func/fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@deepq/target_q_func/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "deepq_1/group_deps"
  op: "NoOp"
  input: "^deepq_1/Assign"
  input: "^deepq_1/Assign_1"
  input: "^deepq_1/Assign_2"
  input: "^deepq_1/Assign_3"
}
versions {
  producer: 26
}
