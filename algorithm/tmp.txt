"F:\Program Files\Java\jdk1.8.0_181\bin\java.exe" "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.2\lib\idea_rt.jar=13985:C:\Program Files\JetBrains\IntelliJ IDEA 2018.2\bin" -Dfile.encoding=UTF-8 -classpath "F:\Program Files\Java\jdk1.8.0_181\jre\lib\charsets.jar;F:\Program Files\Java\jdk1.8.0_181\jre\lib\deploy.jar;F:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\access-bridge-64.jar;F:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\cldrdata.jar;F:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\dnsns.jar;F:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\jaccess.jar;F:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\jfxrt.jar;F:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\localedata.jar;F:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\nashorn.jar;F:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunec.jar;F:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunjce_provider.jar;F:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunmscapi.jar;F:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunpkcs11.jar;F:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\zipfs.jar;F:\Program Files\Java\jdk1.8.0_181\jre\lib\javaws.jar;F:\Program Files\Java\jdk1.8.0_181\jre\lib\jce.jar;F:\Program Files\Java\jdk1.8.0_181\jre\lib\jfr.jar;F:\Program Files\Java\jdk1.8.0_181\jre\lib\jfxswt.jar;F:\Program Files\Java\jdk1.8.0_181\jre\lib\jsse.jar;F:\Program Files\Java\jdk1.8.0_181\jre\lib\management-agent.jar;F:\Program Files\Java\jdk1.8.0_181\jre\lib\plugin.jar;F:\Program Files\Java\jdk1.8.0_181\jre\lib\resources.jar;F:\Program Files\Java\jdk1.8.0_181\jre\lib\rt.jar;F:\IdeaProjects\sim-world\algorithm\target\test-classes;F:\IdeaProjects\sim-world\algorithm\target\classes;F:\repository\com\squareup\okio\okio\1.15.0\okio-1.15.0.jar;F:\IdeaProjects\sim-world\util\target\classes;F:\repository\org\apache\commons\commons-lang3\3.7\commons-lang3-3.7.jar;F:\repository\org\tensorflow\proto\1.9.0\proto-1.9.0.jar;F:\repository\com\google\protobuf\protobuf-java\3.5.1\protobuf-java-3.5.1.jar;F:\repository\org\bytedeco\javacpp-presets\tensorflow-platform\1.9.0-1.4.2\tensorflow-platform-1.9.0-1.4.2.jar;F:\repository\org\bytedeco\javacpp-presets\tensorflow\1.9.0-1.4.2\tensorflow-1.9.0-1.4.2.jar;F:\repository\org\bytedeco\javacpp-presets\tensorflow\1.9.0-1.4.2\tensorflow-1.9.0-1.4.2-android-arm.jar;F:\repository\org\bytedeco\javacpp-presets\tensorflow\1.9.0-1.4.2\tensorflow-1.9.0-1.4.2-android-arm64.jar;F:\repository\org\bytedeco\javacpp-presets\tensorflow\1.9.0-1.4.2\tensorflow-1.9.0-1.4.2-android-x86.jar;F:\repository\org\bytedeco\javacpp-presets\tensorflow\1.9.0-1.4.2\tensorflow-1.9.0-1.4.2-android-x86_64.jar;F:\repository\org\bytedeco\javacpp-presets\tensorflow\1.9.0-1.4.2\tensorflow-1.9.0-1.4.2-linux-x86.jar;F:\repository\org\bytedeco\javacpp-presets\tensorflow\1.9.0-1.4.2\tensorflow-1.9.0-1.4.2-linux-x86_64.jar;F:\repository\org\bytedeco\javacpp-presets\tensorflow\1.9.0-1.4.2\tensorflow-1.9.0-1.4.2-macosx-x86_64.jar;F:\repository\org\bytedeco\javacpp-presets\tensorflow\1.9.0-1.4.2\tensorflow-1.9.0-1.4.2-windows-x86_64.jar;F:\repository\org\bytedeco\javacpp\1.4.2\javacpp-1.4.2.jar;F:\repository\org\bytedeco\javacpp-presets\cuda\9.2-7.1-1.4.2\cuda-9.2-7.1-1.4.2-windows-x86_64-redist.jar;F:\IdeaProjects\sim-world\world\target\classes;F:\IdeaProjects\sim-world\graphics\target\classes;F:\repository\com\badlogicgames\gdx\gdx\1.9.8\gdx-1.9.8.jar;F:\repository\com\badlogicgames\gdx\gdx-backend-lwjgl3\1.9.8\gdx-backend-lwjgl3-1.9.8.jar;F:\repository\org\lwjgl\lwjgl\3.1.3\lwjgl-3.1.3.jar;F:\repository\org\lwjgl\lwjgl\3.1.3\lwjgl-3.1.3-natives-windows.jar;F:\repository\org\lwjgl\lwjgl\3.1.3\lwjgl-3.1.3-natives-linux.jar;F:\repository\org\lwjgl\lwjgl\3.1.3\lwjgl-3.1.3-natives-macos.jar;F:\repository\org\lwjgl\lwjgl-glfw\3.1.3\lwjgl-glfw-3.1.3.jar;F:\repository\org\lwjgl\lwjgl-glfw\3.1.3\lwjgl-glfw-3.1.3-natives-windows.jar;F:\repository\org\lwjgl\lwjgl-glfw\3.1.3\lwjgl-glfw-3.1.3-natives-linux.jar;F:\repository\org\lwjgl\lwjgl-glfw\3.1.3\lwjgl-glfw-3.1.3-natives-macos.jar;F:\repository\org\lwjgl\lwjgl-jemalloc\3.1.3\lwjgl-jemalloc-3.1.3.jar;F:\repository\org\lwjgl\lwjgl-jemalloc\3.1.3\lwjgl-jemalloc-3.1.3-natives-windows.jar;F:\repository\org\lwjgl\lwjgl-jemalloc\3.1.3\lwjgl-jemalloc-3.1.3-natives-linux.jar;F:\repository\org\lwjgl\lwjgl-jemalloc\3.1.3\lwjgl-jemalloc-3.1.3-natives-macos.jar;F:\repository\org\lwjgl\lwjgl-opengl\3.1.3\lwjgl-opengl-3.1.3.jar;F:\repository\org\lwjgl\lwjgl-opengl\3.1.3\lwjgl-opengl-3.1.3-natives-windows.jar;F:\repository\org\lwjgl\lwjgl-opengl\3.1.3\lwjgl-opengl-3.1.3-natives-linux.jar;F:\repository\org\lwjgl\lwjgl-opengl\3.1.3\lwjgl-opengl-3.1.3-natives-macos.jar;F:\repository\org\lwjgl\lwjgl-openal\3.1.3\lwjgl-openal-3.1.3.jar;F:\repository\org\lwjgl\lwjgl-openal\3.1.3\lwjgl-openal-3.1.3-natives-windows.jar;F:\repository\org\lwjgl\lwjgl-openal\3.1.3\lwjgl-openal-3.1.3-natives-linux.jar;F:\repository\org\lwjgl\lwjgl-openal\3.1.3\lwjgl-openal-3.1.3-natives-macos.jar;F:\repository\com\badlogicgames\jlayer\jlayer\1.0.1-gdx\jlayer-1.0.1-gdx.jar;F:\repository\org\jcraft\jorbis\0.0.17\jorbis-0.0.17.jar;F:\repository\com\badlogicgames\gdx\gdx-platform\1.9.8\gdx-platform-1.9.8-natives-desktop.jar;F:\repository\com\badlogicgames\gdx\gdx-freetype\1.9.8\gdx-freetype-1.9.8.jar;F:\repository\com\badlogicgames\gdx\gdx-freetype-platform\1.9.8\gdx-freetype-platform-1.9.8-natives-desktop.jar;F:\repository\org\jetbrains\kotlin\kotlin-stdlib\1.2.60\kotlin-stdlib-1.2.60.jar;F:\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.2.60\kotlin-stdlib-common-1.2.60.jar;F:\repository\org\jetbrains\annotations\13.0\annotations-13.0.jar;F:\repository\junit\junit\4.12\junit-4.12.jar;F:\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar" wumo.sim.algorithm.tensorflow.learn_lowlevel_api.OpGeneratorKt
Warning: Loader.putMemberOffset(): java.lang.ClassNotFoundException: org.bytedeco.javacpp.tensorflow$ArenaOptions$On_arena_allocation_Pointer_long_Pointer
Warning: Loader.putMemberOffset(): java.lang.ClassNotFoundException: org.bytedeco.javacpp.tensorflow$ArenaOptions$On_arena_destruction_Arena_Pointer_long
Warning: Loader.putMemberOffset(): java.lang.ClassNotFoundException: org.bytedeco.javacpp.tensorflow$ArenaOptions$On_arena_reset_Arena_Pointer_long
Warning: Loader.putMemberOffset(): java.lang.ClassNotFoundException: org.bytedeco.javacpp.tensorflow$ArenaOptions$On_arena_init_Arena
[name: "BatchToSpace"
input_arg {
  name: "input"
  type_attr: "T"
}
input_arg {
  name: "crops"
  type_attr: "Tidx"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "block_size"
  type: "int"
  has_minimum: true
  minimum: 2
}
attr {
  name: "Tidx"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "BatchToSpaceND"
input_arg {
  name: "input"
  type_attr: "T"
}
input_arg {
  name: "block_shape"
  type_attr: "Tblock_shape"
}
input_arg {
  name: "crops"
  type_attr: "Tcrops"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Tblock_shape"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
attr {
  name: "Tcrops"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "Bitcast"
input_arg {
  name: "input"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "type"
}
attr {
  name: "T"
  type: "type"
  allowed_values {
    list {
      type: DT_BFLOAT16
      type: DT_HALF
      type: DT_FLOAT
      type: DT_DOUBLE
      type: DT_INT64
      type: DT_INT32
      type: DT_UINT8
      type: DT_UINT16
      type: DT_INT8
      type: DT_INT16
      type: DT_COMPLEX64
      type: DT_COMPLEX128
      type: DT_QINT8
      type: DT_QUINT8
      type: DT_QINT16
      type: DT_QUINT16
      type: DT_QINT32
    }
  }
}
attr {
  name: "type"
  type: "type"
  allowed_values {
    list {
      type: DT_BFLOAT16
      type: DT_HALF
      type: DT_FLOAT
      type: DT_DOUBLE
      type: DT_INT64
      type: DT_INT32
      type: DT_UINT8
      type: DT_UINT16
      type: DT_INT8
      type: DT_INT16
      type: DT_COMPLEX64
      type: DT_COMPLEX128
      type: DT_QINT8
      type: DT_QUINT8
      type: DT_QINT16
      type: DT_QUINT16
      type: DT_QINT32
    }
  }
}
, name: "BroadcastArgs"
input_arg {
  name: "s0"
  type_attr: "T"
}
input_arg {
  name: "s1"
  type_attr: "T"
}
output_arg {
  name: "r0"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "BroadcastTo"
input_arg {
  name: "input"
  type_attr: "T"
}
input_arg {
  name: "shape"
  type_attr: "Tidx"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Tidx"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "CheckNumerics"
input_arg {
  name: "tensor"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
  allowed_values {
    list {
      type: DT_BFLOAT16
      type: DT_HALF
      type: DT_FLOAT
      type: DT_DOUBLE
    }
  }
}
attr {
  name: "message"
  type: "string"
}
, name: "ConcatV2"
input_arg {
  name: "values"
  type_attr: "T"
  number_attr: "N"
}
input_arg {
  name: "axis"
  type_attr: "Tidx"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "N"
  type: "int"
  has_minimum: true
  minimum: 2
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Tidx"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "ConjugateTranspose"
input_arg {
  name: "x"
  type_attr: "T"
}
input_arg {
  name: "perm"
  type_attr: "Tperm"
}
output_arg {
  name: "y"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Tperm"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "DebugGradientIdentity"
input_arg {
  name: "input"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
allows_uninitialized_input: true
, name: "DebugGradientRefIdentity"
input_arg {
  name: "input"
  type_attr: "T"
  is_ref: true
}
output_arg {
  name: "output"
  type_attr: "T"
  is_ref: true
}
attr {
  name: "T"
  type: "type"
}
allows_uninitialized_input: true
, name: "DeepCopy"
input_arg {
  name: "x"
  type_attr: "T"
}
output_arg {
  name: "y"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
is_stateful: true
, name: "DepthToSpace"
input_arg {
  name: "input"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "block_size"
  type: "int"
  has_minimum: true
  minimum: 2
}
attr {
  name: "data_format"
  type: "string"
  default_value {
    s: "NHWC"
  }
  allowed_values {
    list {
      s: "NHWC"
      s: "NCHW"
      s: "NCHW_VECT_C"
    }
  }
}
, name: "Dequantize"
input_arg {
  name: "input"
  type_attr: "T"
}
input_arg {
  name: "min_range"
  type: DT_FLOAT
}
input_arg {
  name: "max_range"
  type: DT_FLOAT
}
output_arg {
  name: "output"
  type: DT_FLOAT
}
attr {
  name: "T"
  type: "type"
  allowed_values {
    list {
      type: DT_QINT8
      type: DT_QUINT8
      type: DT_QINT32
      type: DT_QINT16
      type: DT_QUINT16
    }
  }
}
attr {
  name: "mode"
  type: "string"
  default_value {
    s: "MIN_COMBINED"
  }
  allowed_values {
    list {
      s: "MIN_COMBINED"
      s: "MIN_FIRST"
      s: "SCALED"
    }
  }
}
, name: "Diag"
input_arg {
  name: "diagonal"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
  allowed_values {
    list {
      type: DT_BFLOAT16
      type: DT_HALF
      type: DT_FLOAT
      type: DT_DOUBLE
      type: DT_INT32
      type: DT_INT64
      type: DT_COMPLEX64
      type: DT_COMPLEX128
    }
  }
}
, name: "DiagPart"
input_arg {
  name: "input"
  type_attr: "T"
}
output_arg {
  name: "diagonal"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
  allowed_values {
    list {
      type: DT_BFLOAT16
      type: DT_HALF
      type: DT_FLOAT
      type: DT_DOUBLE
      type: DT_INT32
      type: DT_INT64
      type: DT_COMPLEX64
      type: DT_COMPLEX128
    }
  }
}
, name: "EditDistance"
input_arg {
  name: "hypothesis_indices"
  type: DT_INT64
}
input_arg {
  name: "hypothesis_values"
  type_attr: "T"
}
input_arg {
  name: "hypothesis_shape"
  type: DT_INT64
}
input_arg {
  name: "truth_indices"
  type: DT_INT64
}
input_arg {
  name: "truth_values"
  type_attr: "T"
}
input_arg {
  name: "truth_shape"
  type: DT_INT64
}
output_arg {
  name: "output"
  type: DT_FLOAT
}
attr {
  name: "normalize"
  type: "bool"
  default_value {
    b: true
  }
}
attr {
  name: "T"
  type: "type"
}
, name: "Empty"
input_arg {
  name: "shape"
  type: DT_INT32
}
output_arg {
  name: "output"
  type_attr: "dtype"
}
attr {
  name: "dtype"
  type: "type"
}
attr {
  name: "init"
  type: "bool"
  default_value {
    b: false
  }
}
is_stateful: true
, name: "ExpandDims"
input_arg {
  name: "input"
  type_attr: "T"
}
input_arg {
  name: "dim"
  type_attr: "Tdim"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Tdim"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "ExtractImagePatches"
input_arg {
  name: "images"
  type_attr: "T"
}
output_arg {
  name: "patches"
  type_attr: "T"
}
attr {
  name: "ksizes"
  type: "list(int)"
  has_minimum: true
  minimum: 4
}
attr {
  name: "strides"
  type: "list(int)"
  has_minimum: true
  minimum: 4
}
attr {
  name: "rates"
  type: "list(int)"
  has_minimum: true
  minimum: 4
}
attr {
  name: "T"
  type: "type"
  allowed_values {
    list {
      type: DT_FLOAT
      type: DT_DOUBLE
      type: DT_INT32
      type: DT_UINT8
      type: DT_INT16
      type: DT_INT8
      type: DT_INT64
      type: DT_BFLOAT16
      type: DT_UINT16
      type: DT_HALF
      type: DT_UINT32
      type: DT_UINT64
    }
  }
}
attr {
  name: "padding"
  type: "string"
  allowed_values {
    list {
      s: "SAME"
      s: "VALID"
    }
  }
}
, name: "FakeQuantWithMinMaxArgs"
input_arg {
  name: "inputs"
  type: DT_FLOAT
}
output_arg {
  name: "outputs"
  type: DT_FLOAT
}
attr {
  name: "min"
  type: "float"
  default_value {
    f: -6.0
  }
}
attr {
  name: "max"
  type: "float"
  default_value {
    f: 6.0
  }
}
attr {
  name: "num_bits"
  type: "int"
  default_value {
    i: 8
  }
}
attr {
  name: "narrow_range"
  type: "bool"
  default_value {
    b: false
  }
}
, name: "FakeQuantWithMinMaxArgsGradient"
input_arg {
  name: "gradients"
  type: DT_FLOAT
}
input_arg {
  name: "inputs"
  type: DT_FLOAT
}
output_arg {
  name: "backprops"
  type: DT_FLOAT
}
attr {
  name: "min"
  type: "float"
  default_value {
    f: -6.0
  }
}
attr {
  name: "max"
  type: "float"
  default_value {
    f: 6.0
  }
}
attr {
  name: "num_bits"
  type: "int"
  default_value {
    i: 8
  }
}
attr {
  name: "narrow_range"
  type: "bool"
  default_value {
    b: false
  }
}
, name: "FakeQuantWithMinMaxVars"
input_arg {
  name: "inputs"
  type: DT_FLOAT
}
input_arg {
  name: "min"
  type: DT_FLOAT
}
input_arg {
  name: "max"
  type: DT_FLOAT
}
output_arg {
  name: "outputs"
  type: DT_FLOAT
}
attr {
  name: "num_bits"
  type: "int"
  default_value {
    i: 8
  }
}
attr {
  name: "narrow_range"
  type: "bool"
  default_value {
    b: false
  }
}
, name: "FakeQuantWithMinMaxVarsGradient"
input_arg {
  name: "gradients"
  type: DT_FLOAT
}
input_arg {
  name: "inputs"
  type: DT_FLOAT
}
input_arg {
  name: "min"
  type: DT_FLOAT
}
input_arg {
  name: "max"
  type: DT_FLOAT
}
output_arg {
  name: "backprops_wrt_input"
  type: DT_FLOAT
}
output_arg {
  name: "backprop_wrt_min"
  type: DT_FLOAT
}
output_arg {
  name: "backprop_wrt_max"
  type: DT_FLOAT
}
attr {
  name: "num_bits"
  type: "int"
  default_value {
    i: 8
  }
}
attr {
  name: "narrow_range"
  type: "bool"
  default_value {
    b: false
  }
}
, name: "FakeQuantWithMinMaxVarsPerChannel"
input_arg {
  name: "inputs"
  type: DT_FLOAT
}
input_arg {
  name: "min"
  type: DT_FLOAT
}
input_arg {
  name: "max"
  type: DT_FLOAT
}
output_arg {
  name: "outputs"
  type: DT_FLOAT
}
attr {
  name: "num_bits"
  type: "int"
  default_value {
    i: 8
  }
}
attr {
  name: "narrow_range"
  type: "bool"
  default_value {
    b: false
  }
}
, name: "FakeQuantWithMinMaxVarsPerChannelGradient"
input_arg {
  name: "gradients"
  type: DT_FLOAT
}
input_arg {
  name: "inputs"
  type: DT_FLOAT
}
input_arg {
  name: "min"
  type: DT_FLOAT
}
input_arg {
  name: "max"
  type: DT_FLOAT
}
output_arg {
  name: "backprops_wrt_input"
  type: DT_FLOAT
}
output_arg {
  name: "backprop_wrt_min"
  type: DT_FLOAT
}
output_arg {
  name: "backprop_wrt_max"
  type: DT_FLOAT
}
attr {
  name: "num_bits"
  type: "int"
  default_value {
    i: 8
  }
}
attr {
  name: "narrow_range"
  type: "bool"
  default_value {
    b: false
  }
}
, name: "Fill"
input_arg {
  name: "dims"
  type_attr: "index_type"
}
input_arg {
  name: "value"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "index_type"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "Gather"
input_arg {
  name: "params"
  type_attr: "Tparams"
}
input_arg {
  name: "indices"
  type_attr: "Tindices"
}
output_arg {
  name: "output"
  type_attr: "Tparams"
}
attr {
  name: "validate_indices"
  type: "bool"
  default_value {
    b: true
  }
}
attr {
  name: "Tparams"
  type: "type"
}
attr {
  name: "Tindices"
  type: "type"
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "GatherNd"
input_arg {
  name: "params"
  type_attr: "Tparams"
}
input_arg {
  name: "indices"
  type_attr: "Tindices"
}
output_arg {
  name: "output"
  type_attr: "Tparams"
}
attr {
  name: "Tparams"
  type: "type"
}
attr {
  name: "Tindices"
  type: "type"
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "GatherV2"
input_arg {
  name: "params"
  type_attr: "Tparams"
}
input_arg {
  name: "indices"
  type_attr: "Tindices"
}
input_arg {
  name: "axis"
  type_attr: "Taxis"
}
output_arg {
  name: "output"
  type_attr: "Tparams"
}
attr {
  name: "Tparams"
  type: "type"
}
attr {
  name: "Tindices"
  type: "type"
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
attr {
  name: "Taxis"
  type: "type"
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "GuaranteeConst"
input_arg {
  name: "input"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
is_stateful: true
, name: "Identity"
input_arg {
  name: "input"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
, name: "IdentityN"
input_arg {
  name: "input"
  type_list_attr: "T"
}
output_arg {
  name: "output"
  type_list_attr: "T"
}
attr {
  name: "T"
  type: "list(type)"
  has_minimum: true
  minimum: 1
}
, name: "ImmutableConst"
output_arg {
  name: "tensor"
  type_attr: "dtype"
}
attr {
  name: "dtype"
  type: "type"
}
attr {
  name: "shape"
  type: "shape"
}
attr {
  name: "memory_region_name"
  type: "string"
}
, name: "InplaceAdd"
input_arg {
  name: "x"
  type_attr: "T"
}
input_arg {
  name: "i"
  type: DT_INT32
}
input_arg {
  name: "v"
  type_attr: "T"
}
output_arg {
  name: "y"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
, name: "InplaceSub"
input_arg {
  name: "x"
  type_attr: "T"
}
input_arg {
  name: "i"
  type: DT_INT32
}
input_arg {
  name: "v"
  type_attr: "T"
}
output_arg {
  name: "y"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
, name: "InplaceUpdate"
input_arg {
  name: "x"
  type_attr: "T"
}
input_arg {
  name: "i"
  type: DT_INT32
}
input_arg {
  name: "v"
  type_attr: "T"
}
output_arg {
  name: "y"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
, name: "InvertPermutation"
input_arg {
  name: "x"
  type_attr: "T"
}
output_arg {
  name: "y"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "ListDiff"
input_arg {
  name: "x"
  type_attr: "T"
}
input_arg {
  name: "y"
  type_attr: "T"
}
output_arg {
  name: "out"
  type_attr: "T"
}
output_arg {
  name: "idx"
  type_attr: "out_idx"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "out_idx"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "MatrixBandPart"
input_arg {
  name: "input"
  type_attr: "T"
}
input_arg {
  name: "num_lower"
  type_attr: "Tindex"
}
input_arg {
  name: "num_upper"
  type_attr: "Tindex"
}
output_arg {
  name: "band"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Tindex"
  type: "type"
  default_value {
    type: DT_INT64
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "MatrixDiag"
input_arg {
  name: "diagonal"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
, name: "MatrixDiagPart"
input_arg {
  name: "input"
  type_attr: "T"
}
output_arg {
  name: "diagonal"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
, name: "MatrixSetDiag"
input_arg {
  name: "input"
  type_attr: "T"
}
input_arg {
  name: "diagonal"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
, name: "MirrorPad"
input_arg {
  name: "input"
  type_attr: "T"
}
input_arg {
  name: "paddings"
  type_attr: "Tpaddings"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Tpaddings"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
attr {
  name: "mode"
  type: "string"
  allowed_values {
    list {
      s: "REFLECT"
      s: "SYMMETRIC"
    }
  }
}
, name: "OneHot"
input_arg {
  name: "indices"
  type_attr: "TI"
}
input_arg {
  name: "depth"
  type: DT_INT32
}
input_arg {
  name: "on_value"
  type_attr: "T"
}
input_arg {
  name: "off_value"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "axis"
  type: "int"
  default_value {
    i: -1
  }
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "TI"
  type: "type"
  default_value {
    type: DT_INT64
  }
  allowed_values {
    list {
      type: DT_UINT8
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "OnesLike"
input_arg {
  name: "x"
  type_attr: "T"
}
output_arg {
  name: "y"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
  allowed_values {
    list {
      type: DT_BFLOAT16
      type: DT_HALF
      type: DT_FLOAT
      type: DT_DOUBLE
      type: DT_INT8
      type: DT_UINT8
      type: DT_INT16
      type: DT_UINT16
      type: DT_INT32
      type: DT_INT64
      type: DT_COMPLEX64
      type: DT_COMPLEX128
      type: DT_BOOL
    }
  }
}
, name: "Pack"
input_arg {
  name: "values"
  type_attr: "T"
  number_attr: "N"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "N"
  type: "int"
  has_minimum: true
  minimum: 1
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "axis"
  type: "int"
  default_value {
    i: 0
  }
}
, name: "Pad"
input_arg {
  name: "input"
  type_attr: "T"
}
input_arg {
  name: "paddings"
  type_attr: "Tpaddings"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Tpaddings"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "PadV2"
input_arg {
  name: "input"
  type_attr: "T"
}
input_arg {
  name: "paddings"
  type_attr: "Tpaddings"
}
input_arg {
  name: "constant_values"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Tpaddings"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "ParallelConcat"
input_arg {
  name: "values"
  type_attr: "T"
  number_attr: "N"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "N"
  type: "int"
  has_minimum: true
  minimum: 1
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "shape"
  type: "shape"
}
, name: "Placeholder"
output_arg {
  name: "output"
  type_attr: "dtype"
}
attr {
  name: "dtype"
  type: "type"
}
attr {
  name: "shape"
  type: "shape"
  default_value {
    shape {
      unknown_rank: true
    }
  }
}
, name: "PlaceholderWithDefault"
input_arg {
  name: "input"
  type_attr: "dtype"
}
output_arg {
  name: "output"
  type_attr: "dtype"
}
attr {
  name: "dtype"
  type: "type"
}
attr {
  name: "shape"
  type: "shape"
}
, name: "PreventGradient"
input_arg {
  name: "input"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "message"
  type: "string"
  default_value {
    s: ""
  }
}
, name: "QuantizeAndDequantizeV2"
input_arg {
  name: "input"
  type_attr: "T"
}
input_arg {
  name: "input_min"
  type_attr: "T"
}
input_arg {
  name: "input_max"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "signed_input"
  type: "bool"
  default_value {
    b: true
  }
}
attr {
  name: "num_bits"
  type: "int"
  default_value {
    i: 8
  }
}
attr {
  name: "range_given"
  type: "bool"
  default_value {
    b: false
  }
}
attr {
  name: "T"
  type: "type"
  allowed_values {
    list {
      type: DT_BFLOAT16
      type: DT_HALF
      type: DT_FLOAT
      type: DT_DOUBLE
    }
  }
}
, name: "QuantizeAndDequantizeV3"
input_arg {
  name: "input"
  type_attr: "T"
}
input_arg {
  name: "input_min"
  type_attr: "T"
}
input_arg {
  name: "input_max"
  type_attr: "T"
}
input_arg {
  name: "num_bits"
  type: DT_INT32
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "signed_input"
  type: "bool"
  default_value {
    b: true
  }
}
attr {
  name: "range_given"
  type: "bool"
  default_value {
    b: true
  }
}
attr {
  name: "T"
  type: "type"
  allowed_values {
    list {
      type: DT_BFLOAT16
      type: DT_HALF
      type: DT_FLOAT
      type: DT_DOUBLE
    }
  }
}
, name: "QuantizeV2"
input_arg {
  name: "input"
  type: DT_FLOAT
}
input_arg {
  name: "min_range"
  type: DT_FLOAT
}
input_arg {
  name: "max_range"
  type: DT_FLOAT
}
output_arg {
  name: "output"
  type_attr: "T"
}
output_arg {
  name: "output_min"
  type: DT_FLOAT
}
output_arg {
  name: "output_max"
  type: DT_FLOAT
}
attr {
  name: "T"
  type: "type"
  allowed_values {
    list {
      type: DT_QINT8
      type: DT_QUINT8
      type: DT_QINT32
      type: DT_QINT16
      type: DT_QUINT16
    }
  }
}
attr {
  name: "mode"
  type: "string"
  default_value {
    s: "MIN_COMBINED"
  }
  allowed_values {
    list {
      s: "MIN_COMBINED"
      s: "MIN_FIRST"
      s: "SCALED"
    }
  }
}
attr {
  name: "round_mode"
  type: "string"
  default_value {
    s: "HALF_AWAY_FROM_ZERO"
  }
  allowed_values {
    list {
      s: "HALF_AWAY_FROM_ZERO"
      s: "HALF_TO_EVEN"
    }
  }
}
, name: "QuantizedConcat"
input_arg {
  name: "concat_dim"
  type: DT_INT32
}
input_arg {
  name: "values"
  type_attr: "T"
  number_attr: "N"
}
input_arg {
  name: "input_mins"
  type: DT_FLOAT
  number_attr: "N"
}
input_arg {
  name: "input_maxes"
  type: DT_FLOAT
  number_attr: "N"
}
output_arg {
  name: "output"
  type_attr: "T"
}
output_arg {
  name: "output_min"
  type: DT_FLOAT
}
output_arg {
  name: "output_max"
  type: DT_FLOAT
}
attr {
  name: "N"
  type: "int"
  has_minimum: true
  minimum: 2
}
attr {
  name: "T"
  type: "type"
}
, name: "QuantizedInstanceNorm"
input_arg {
  name: "x"
  type_attr: "T"
}
input_arg {
  name: "x_min"
  type: DT_FLOAT
}
input_arg {
  name: "x_max"
  type: DT_FLOAT
}
output_arg {
  name: "y"
  type_attr: "T"
}
output_arg {
  name: "y_min"
  type: DT_FLOAT
}
output_arg {
  name: "y_max"
  type: DT_FLOAT
}
attr {
  name: "T"
  type: "type"
  allowed_values {
    list {
      type: DT_QINT8
      type: DT_QUINT8
      type: DT_QINT32
      type: DT_QINT16
      type: DT_QUINT16
    }
  }
}
attr {
  name: "output_range_given"
  type: "bool"
  default_value {
    b: false
  }
}
attr {
  name: "given_y_min"
  type: "float"
  default_value {
    f: 0.0
  }
}
attr {
  name: "given_y_max"
  type: "float"
  default_value {
    f: 0.0
  }
}
attr {
  name: "variance_epsilon"
  type: "float"
  default_value {
    f: 1.0E-5
  }
}
attr {
  name: "min_separation"
  type: "float"
  default_value {
    f: 0.001
  }
}
, name: "QuantizedReshape"
input_arg {
  name: "tensor"
  type_attr: "T"
}
input_arg {
  name: "shape"
  type_attr: "Tshape"
}
input_arg {
  name: "input_min"
  type: DT_FLOAT
}
input_arg {
  name: "input_max"
  type: DT_FLOAT
}
output_arg {
  name: "output"
  type_attr: "T"
}
output_arg {
  name: "output_min"
  type: DT_FLOAT
}
output_arg {
  name: "output_max"
  type: DT_FLOAT
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Tshape"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "Rank"
input_arg {
  name: "input"
  type_attr: "T"
}
output_arg {
  name: "output"
  type: DT_INT32
}
attr {
  name: "T"
  type: "type"
}
, name: "Reshape"
input_arg {
  name: "tensor"
  type_attr: "T"
}
input_arg {
  name: "shape"
  type_attr: "Tshape"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Tshape"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "ResourceStridedSliceAssign"
input_arg {
  name: "ref"
  type: DT_RESOURCE
}
input_arg {
  name: "begin"
  type_attr: "Index"
}
input_arg {
  name: "end"
  type_attr: "Index"
}
input_arg {
  name: "strides"
  type_attr: "Index"
}
input_arg {
  name: "value"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Index"
  type: "type"
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
attr {
  name: "begin_mask"
  type: "int"
  default_value {
    i: 0
  }
}
attr {
  name: "end_mask"
  type: "int"
  default_value {
    i: 0
  }
}
attr {
  name: "ellipsis_mask"
  type: "int"
  default_value {
    i: 0
  }
}
attr {
  name: "new_axis_mask"
  type: "int"
  default_value {
    i: 0
  }
}
attr {
  name: "shrink_axis_mask"
  type: "int"
  default_value {
    i: 0
  }
}
is_stateful: true
, name: "ReverseSequence"
input_arg {
  name: "input"
  type_attr: "T"
}
input_arg {
  name: "seq_lengths"
  type_attr: "Tlen"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "seq_dim"
  type: "int"
}
attr {
  name: "batch_dim"
  type: "int"
  default_value {
    i: 0
  }
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Tlen"
  type: "type"
  default_value {
    type: DT_INT64
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "ReverseV2"
input_arg {
  name: "tensor"
  type_attr: "T"
}
input_arg {
  name: "axis"
  type_attr: "Tidx"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "Tidx"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
attr {
  name: "T"
  type: "type"
  allowed_values {
    list {
      type: DT_UINT8
      type: DT_INT8
      type: DT_UINT16
      type: DT_INT16
      type: DT_INT32
      type: DT_INT64
      type: DT_BOOL
      type: DT_BFLOAT16
      type: DT_HALF
      type: DT_FLOAT
      type: DT_DOUBLE
      type: DT_COMPLEX64
      type: DT_COMPLEX128
      type: DT_STRING
    }
  }
}
, name: "ScatterNd"
input_arg {
  name: "indices"
  type_attr: "Tindices"
}
input_arg {
  name: "updates"
  type_attr: "T"
}
input_arg {
  name: "shape"
  type_attr: "Tindices"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Tindices"
  type: "type"
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "ScatterNdNonAliasingAdd"
input_arg {
  name: "input"
  type_attr: "T"
}
input_arg {
  name: "indices"
  type_attr: "Tindices"
}
input_arg {
  name: "updates"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
  allowed_values {
    list {
      type: DT_FLOAT
      type: DT_DOUBLE
      type: DT_INT32
      type: DT_UINT8
      type: DT_INT16
      type: DT_INT8
      type: DT_COMPLEX64
      type: DT_INT64
      type: DT_QINT8
      type: DT_QUINT8
      type: DT_QINT32
      type: DT_BFLOAT16
      type: DT_UINT16
      type: DT_COMPLEX128
      type: DT_HALF
      type: DT_UINT32
      type: DT_UINT64
    }
  }
}
attr {
  name: "Tindices"
  type: "type"
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "Shape"
input_arg {
  name: "input"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "out_type"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "out_type"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "ShapeN"
input_arg {
  name: "input"
  type_attr: "T"
  number_attr: "N"
}
output_arg {
  name: "output"
  type_attr: "out_type"
  number_attr: "N"
}
attr {
  name: "N"
  type: "int"
  has_minimum: true
  minimum: 1
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "out_type"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "Size"
input_arg {
  name: "input"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "out_type"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "out_type"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "Slice"
input_arg {
  name: "input"
  type_attr: "T"
}
input_arg {
  name: "begin"
  type_attr: "Index"
}
input_arg {
  name: "size"
  type_attr: "Index"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Index"
  type: "type"
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "Snapshot"
input_arg {
  name: "input"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
, name: "SpaceToBatch"
input_arg {
  name: "input"
  type_attr: "T"
}
input_arg {
  name: "paddings"
  type_attr: "Tpaddings"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Tpaddings"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
attr {
  name: "block_size"
  type: "int"
  has_minimum: true
  minimum: 2
}
, name: "SpaceToBatchND"
input_arg {
  name: "input"
  type_attr: "T"
}
input_arg {
  name: "block_shape"
  type_attr: "Tblock_shape"
}
input_arg {
  name: "paddings"
  type_attr: "Tpaddings"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Tblock_shape"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
attr {
  name: "Tpaddings"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "SpaceToDepth"
input_arg {
  name: "input"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "block_size"
  type: "int"
  has_minimum: true
  minimum: 2
}
attr {
  name: "data_format"
  type: "string"
  default_value {
    s: "NHWC"
  }
  allowed_values {
    list {
      s: "NHWC"
      s: "NCHW"
      s: "NCHW_VECT_C"
    }
  }
}
, name: "Split"
input_arg {
  name: "split_dim"
  type: DT_INT32
}
input_arg {
  name: "value"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "T"
  number_attr: "num_split"
}
attr {
  name: "num_split"
  type: "int"
  has_minimum: true
  minimum: 1
}
attr {
  name: "T"
  type: "type"
}
, name: "SplitV"
input_arg {
  name: "value"
  type_attr: "T"
}
input_arg {
  name: "size_splits"
  type_attr: "Tlen"
}
input_arg {
  name: "split_dim"
  type: DT_INT32
}
output_arg {
  name: "output"
  type_attr: "T"
  number_attr: "num_split"
}
attr {
  name: "num_split"
  type: "int"
  has_minimum: true
  minimum: 1
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Tlen"
  type: "type"
  default_value {
    type: DT_INT64
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "Squeeze"
input_arg {
  name: "input"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "squeeze_dims"
  type: "list(int)"
  default_value {
    list {
    }
  }
  has_minimum: true
}
, name: "StopGradient"
input_arg {
  name: "input"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
, name: "StridedSlice"
input_arg {
  name: "input"
  type_attr: "T"
}
input_arg {
  name: "begin"
  type_attr: "Index"
}
input_arg {
  name: "end"
  type_attr: "Index"
}
input_arg {
  name: "strides"
  type_attr: "Index"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Index"
  type: "type"
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
attr {
  name: "begin_mask"
  type: "int"
  default_value {
    i: 0
  }
}
attr {
  name: "end_mask"
  type: "int"
  default_value {
    i: 0
  }
}
attr {
  name: "ellipsis_mask"
  type: "int"
  default_value {
    i: 0
  }
}
attr {
  name: "new_axis_mask"
  type: "int"
  default_value {
    i: 0
  }
}
attr {
  name: "shrink_axis_mask"
  type: "int"
  default_value {
    i: 0
  }
}
, name: "StridedSliceAssign"
input_arg {
  name: "ref"
  type_attr: "T"
  is_ref: true
}
input_arg {
  name: "begin"
  type_attr: "Index"
}
input_arg {
  name: "end"
  type_attr: "Index"
}
input_arg {
  name: "strides"
  type_attr: "Index"
}
input_arg {
  name: "value"
  type_attr: "T"
}
output_arg {
  name: "output_ref"
  type_attr: "T"
  is_ref: true
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Index"
  type: "type"
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
attr {
  name: "begin_mask"
  type: "int"
  default_value {
    i: 0
  }
}
attr {
  name: "end_mask"
  type: "int"
  default_value {
    i: 0
  }
}
attr {
  name: "ellipsis_mask"
  type: "int"
  default_value {
    i: 0
  }
}
attr {
  name: "new_axis_mask"
  type: "int"
  default_value {
    i: 0
  }
}
attr {
  name: "shrink_axis_mask"
  type: "int"
  default_value {
    i: 0
  }
}
, name: "StridedSliceGrad"
input_arg {
  name: "shape"
  type_attr: "Index"
}
input_arg {
  name: "begin"
  type_attr: "Index"
}
input_arg {
  name: "end"
  type_attr: "Index"
}
input_arg {
  name: "strides"
  type_attr: "Index"
}
input_arg {
  name: "dy"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Index"
  type: "type"
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
attr {
  name: "begin_mask"
  type: "int"
  default_value {
    i: 0
  }
}
attr {
  name: "end_mask"
  type: "int"
  default_value {
    i: 0
  }
}
attr {
  name: "ellipsis_mask"
  type: "int"
  default_value {
    i: 0
  }
}
attr {
  name: "new_axis_mask"
  type: "int"
  default_value {
    i: 0
  }
}
attr {
  name: "shrink_axis_mask"
  type: "int"
  default_value {
    i: 0
  }
}
, name: "Tile"
input_arg {
  name: "input"
  type_attr: "T"
}
input_arg {
  name: "multiples"
  type_attr: "Tmultiples"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Tmultiples"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "Transpose"
input_arg {
  name: "x"
  type_attr: "T"
}
input_arg {
  name: "perm"
  type_attr: "Tperm"
}
output_arg {
  name: "y"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Tperm"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "Unique"
input_arg {
  name: "x"
  type_attr: "T"
}
output_arg {
  name: "y"
  type_attr: "T"
}
output_arg {
  name: "idx"
  type_attr: "out_idx"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "out_idx"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "UniqueV2"
input_arg {
  name: "x"
  type_attr: "T"
}
input_arg {
  name: "axis"
  type_attr: "Taxis"
}
output_arg {
  name: "y"
  type_attr: "T"
}
output_arg {
  name: "idx"
  type_attr: "out_idx"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Taxis"
  type: "type"
  default_value {
    type: DT_INT64
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
attr {
  name: "out_idx"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "UniqueWithCounts"
input_arg {
  name: "x"
  type_attr: "T"
}
output_arg {
  name: "y"
  type_attr: "T"
}
output_arg {
  name: "idx"
  type_attr: "out_idx"
}
output_arg {
  name: "count"
  type_attr: "out_idx"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "out_idx"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "UniqueWithCountsV2"
input_arg {
  name: "x"
  type_attr: "T"
}
input_arg {
  name: "axis"
  type_attr: "Taxis"
}
output_arg {
  name: "y"
  type_attr: "T"
}
output_arg {
  name: "idx"
  type_attr: "out_idx"
}
output_arg {
  name: "count"
  type_attr: "out_idx"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Taxis"
  type: "type"
  default_value {
    type: DT_INT64
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
attr {
  name: "out_idx"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "Unpack"
input_arg {
  name: "value"
  type_attr: "T"
}
output_arg {
  name: "output"
  type_attr: "T"
  number_attr: "num"
}
attr {
  name: "num"
  type: "int"
  has_minimum: true
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "axis"
  type: "int"
  default_value {
    i: 0
  }
}
, name: "UnravelIndex"
input_arg {
  name: "indices"
  type_attr: "Tidx"
}
input_arg {
  name: "dims"
  type_attr: "Tidx"
}
output_arg {
  name: "output"
  type_attr: "Tidx"
}
attr {
  name: "Tidx"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "Where"
input_arg {
  name: "input"
  type_attr: "T"
}
output_arg {
  name: "index"
  type: DT_INT64
}
attr {
  name: "T"
  type: "type"
  default_value {
    type: DT_BOOL
  }
  allowed_values {
    list {
      type: DT_FLOAT
      type: DT_DOUBLE
      type: DT_INT32
      type: DT_UINT8
      type: DT_INT16
      type: DT_INT8
      type: DT_COMPLEX64
      type: DT_INT64
      type: DT_QINT8
      type: DT_QUINT8
      type: DT_QINT32
      type: DT_BFLOAT16
      type: DT_UINT16
      type: DT_COMPLEX128
      type: DT_HALF
      type: DT_UINT32
      type: DT_UINT64
      type: DT_BOOL
    }
  }
}
, name: "ZerosLike"
input_arg {
  name: "x"
  type_attr: "T"
}
output_arg {
  name: "y"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
]
[name: "BroadcastGradientArgs"
input_arg {
  name: "s0"
  type_attr: "T"
}
input_arg {
  name: "s1"
  type_attr: "T"
}
output_arg {
  name: "r0"
  type_attr: "T"
}
output_arg {
  name: "r1"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
, name: "MirrorPadGrad"
input_arg {
  name: "input"
  type_attr: "T"
}
input_arg {
  name: "paddings"
  type_attr: "Tpaddings"
}
output_arg {
  name: "output"
  type_attr: "T"
}
attr {
  name: "T"
  type: "type"
}
attr {
  name: "Tpaddings"
  type: "type"
  default_value {
    type: DT_INT32
  }
  allowed_values {
    list {
      type: DT_INT32
      type: DT_INT64
    }
  }
}
attr {
  name: "mode"
  type: "string"
  allowed_values {
    list {
      s: "REFLECT"
      s: "SYMMETRIC"
    }
  }
}
, name: "RefIdentity"
input_arg {
  name: "input"
  type_attr: "T"
  is_ref: true
}
output_arg {
  name: "output"
  type_attr: "T"
  is_ref: true
}
attr {
  name: "T"
  type: "type"
}
allows_uninitialized_input: true
]
[name: "AudioSpectrogram"
input_arg {
  name: "input"
  type: DT_FLOAT
}
output_arg {
  name: "spectrogram"
  type: DT_FLOAT
}
attr {
  name: "window_size"
  type: "int"
}
attr {
  name: "stride"
  type: "int"
}
attr {
  name: "magnitude_squared"
  type: "bool"
  default_value {
    b: false
  }
}
, name: "DecodeWav"
input_arg {
  name: "contents"
  type: DT_STRING
}
output_arg {
  name: "audio"
  type: DT_FLOAT
}
output_arg {
  name: "sample_rate"
  type: DT_INT32
}
attr {
  name: "desired_channels"
  type: "int"
  default_value {
    i: -1
  }
}
attr {
  name: "desired_samples"
  type: "int"
  default_value {
    i: -1
  }
}
, name: "EncodeWav"
input_arg {
  name: "audio"
  type: DT_FLOAT
}
input_arg {
  name: "sample_rate"
  type: DT_INT32
}
output_arg {
  name: "contents"
  type: DT_STRING
}
, name: "Mfcc"
input_arg {
  name: "spectrogram"
  type: DT_FLOAT
}
input_arg {
  name: "sample_rate"
  type: DT_INT32
}
output_arg {
  name: "output"
  type: DT_FLOAT
}
attr {
  name: "upper_frequency_limit"
  type: "float"
  default_value {
    f: 4000.0
  }
}
attr {
  name: "lower_frequency_limit"
  type: "float"
  default_value {
    f: 20.0
  }
}
attr {
  name: "filterbank_channel_count"
  type: "int"
  default_value {
    i: 40
  }
}
attr {
  name: "dct_coefficient_count"
  type: "int"
  default_value {
    i: 13
  }
}
]
Exception in thread "main" java.lang.Exception: BatchFunction
	at wumo.sim.algorithm.tensorflow.learn_lowlevel_api.OpGeneratorKt$generateFiles$1.accept(opGenerator.kt:23)
	at wumo.sim.algorithm.tensorflow.learn_lowlevel_api.OpGeneratorKt$generateFiles$1.accept(opGenerator.kt)
	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at wumo.sim.algorithm.tensorflow.learn_lowlevel_api.OpGeneratorKt.generateFiles(opGenerator.kt:21)
	at wumo.sim.algorithm.tensorflow.learn_lowlevel_api.OpGeneratorKt.main(opGenerator.kt:12)

Process finished with exit code 1
